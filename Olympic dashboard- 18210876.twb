<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Teams' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='athlete_events-csv+ (Multiple Connections)' inline='true' name='federated.1ac8rjf1w901u31exdi441g56pyo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='athlete_events' name='excel-direct.1in3dob0w7vfc4175i5ne14fh61o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='H:/DCU Study/DM and DV/Assignment/Clean data/athlete_events.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='noc_regions' name='excel-direct.0rcnort16ht0wk17d3o8109mb0nm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='H:/DCU Study/DM and DV/Assignment/Clean data/noc_regions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[athlete_events-csv].[NOC]' />
              <expression op='[noc_regions].[NOC]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1in3dob0w7vfc4175i5ne14fh61o' name='athlete_events-csv' table='[&apos;athlete_events-csv$&apos;]' type='table'>
            <columns gridOrigin='A1:O10001:no:A1:O2147483647:0' header='yes' outcome='2'>
              <column datatype='string' name='Name' ordinal='0' />
              <column datatype='string' name='Sex' ordinal='1' />
              <column datatype='integer' name='Age' ordinal='2' />
              <column datatype='string' name='Height' ordinal='3' />
              <column datatype='string' name='Weight' ordinal='4' />
              <column datatype='string' name='Team' ordinal='5' />
              <column datatype='string' name='NOC' ordinal='6' />
              <column datatype='string' name='Games' ordinal='7' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='8' />
              <column datatype='string' name='Season' ordinal='9' />
              <column datatype='string' name='City' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Sport' ordinal='12' />
              <column datatype='string' name='Event' ordinal='13' />
              <column datatype='string' name='Medal' ordinal='14' />
            </columns>
          </relation>
          <relation connection='excel-direct.0rcnort16ht0wk17d3o8109mb0nm' name='noc_regions' table='[noc_regions$]' type='table'>
            <columns gridOrigin='A1:B231:no:A1:B231:0' header='yes' outcome='2'>
              <column datatype='string' name='NOC' ordinal='0' />
              <column datatype='string' name='region' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Age]' value='[athlete_events-csv].[Age]' />
          <map key='[City]' value='[athlete_events-csv].[City]' />
          <map key='[Country]' value='[athlete_events-csv].[Country]' />
          <map key='[Event]' value='[athlete_events-csv].[Event]' />
          <map key='[Games]' value='[athlete_events-csv].[Games]' />
          <map key='[Height]' value='[athlete_events-csv].[Height]' />
          <map key='[Medal]' value='[athlete_events-csv].[Medal]' />
          <map key='[NOC (noc!regions)]' value='[noc_regions].[NOC]' />
          <map key='[NOC]' value='[athlete_events-csv].[NOC]' />
          <map key='[Name]' value='[athlete_events-csv].[Name]' />
          <map key='[Season]' value='[athlete_events-csv].[Season]' />
          <map key='[Sex]' value='[athlete_events-csv].[Sex]' />
          <map key='[Sport]' value='[athlete_events-csv].[Sport]' />
          <map key='[Team]' value='[athlete_events-csv].[Team]' />
          <map key='[Weight]' value='[athlete_events-csv].[Weight]' />
          <map key='[Year]' value='[athlete_events-csv].[Year]' />
          <map key='[region]' value='[noc_regions].[region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Games]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Games</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[athlete_events-csv]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NOC (noc!regions)]</local-name>
            <parent-name>[noc_regions]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[noc_regions]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[noc_regions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B231:no:A1:B231:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
          <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
          <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
          <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
          <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
          <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
          <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
          <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
          <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
          <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
          <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
          <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
          <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
          <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
          <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
          <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
        </semantic-values>
      </column>
      <column aggregation='CountD' datatype='string' name='[Event]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Season]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Team]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column aggregation='CountD' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (City,Country,Season,YEAR(Year))' hidden='true' name='[Action (City,Country,Season,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Medal,Region)' hidden='true' name='[Action (Medal,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Medal]' />
          <groupfilter function='level-members' level='[region]' />
        </groupfilter>
      </group>
      <group caption='Action (Season,YEAR(Year))' hidden='true' name='[Action (Season,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Sex,Sport)' hidden='true' name='[Action (Sex,Sport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sex]' />
          <groupfilter function='level-members' level='[Sport]' />
        </groupfilter>
      </group>
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='union'>
            <groupfilter function='member' level='[Medal]' member='&quot;Bronze&quot;' />
            <groupfilter function='member' level='[Medal]' member='&quot;Gold&quot;' />
            <groupfilter function='member' level='[Medal]' member='&quot;Silver&quot;' />
          </groupfilter>
          <groupfilter function='union'>
            <groupfilter function='member' level='[region]' member='&quot;France&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;Germany&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;Italy&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;Russia&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;UK&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;USA&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.713855' group-percentage='0.0421687' measure-ordering='alphabetic' measure-percentage='0.201807' parameter-percentage='0.0421687' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>%null%</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Virgin Islands, US&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sex:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aeronautics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racquets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Art Competitions&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equestrianism&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tug-Of-War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Speed Skating&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canoeing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorboating&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cycling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trampolining&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpinism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Ski Patrol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeu De Paume&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Figure Skating&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#9c755f'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1ac8rjf1w901u31exdi441g56pyo'>
      <datasources>
        <datasource caption='athlete_events-csv+ (Multiple Connections)' name='federated.1ac8rjf1w901u31exdi441g56pyo' />
      </datasources>
      <datasource-dependencies datasource='federated.1ac8rjf1w901u31exdi441g56pyo'>
        <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Bronze&quot;' />
          <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' />
          <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Silver&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' />
          <groupfilter function='member' level='[none:Season:nk]' member='&quot;Winter&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]'>
        <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]'>
        <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sport with most medals' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sport' />
        <param name='target' value='Sport with most medals' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Olympic Dashboard' type='sheet' worksheet='Olympic hosted cities' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Olympic Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Olympic Dashboard' type='sheet' worksheet='Event count vs years' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Olympic Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Olympic Dashboard' type='sheet' worksheet='Sport with most medals' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Olympic Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Event count vs years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Event count vs Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='federated.1ac8rjf1w901u31exdi441g56pyo' />
          </datasources>
          <datasource-dependencies datasource='federated.1ac8rjf1w901u31exdi441g56pyo'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' name='[Event]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Event]' derivation='CountD' name='[ctd:Event:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Medal,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Medal]' />
              <groupfilter function='level-members' level='[region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Sex,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Medal,Region)]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (City,Country,Season,YEAR(Year))]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Sex,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Event:qk]' scope='rows' value='Sports events' />
            <format attr='title' class='0' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[tyr:Year:qk]' scope='cols' value='Years' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' value='Season'>
              <formatted-text>
                <run fontalignment='1'>Season</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]' value='Medal'>
              <formatted-text>
                <run fontalignment='1'>Medal</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[tyr:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Events:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Event:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='step' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Event:qk]</rows>
        <cols>[federated.1ac8rjf1w901u31exdi441g56pyo].[tyr:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>No matches due to WWII</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#1939-07-11 22:09:38.457#'>
                  <node-reference>
                    <axis>[federated.1ac8rjf1w901u31exdi441g56pyo].[tyr:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='141.62307692307692'>
                  <node-reference>
                    <axis>[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Event:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='120' y='-96' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9C90E9EC-EDBE-4809-AF77-118C86771854}' />
    </worksheet>
    <worksheet name='Olympic hosted cities'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='federated.1ac8rjf1w901u31exdi441g56pyo' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ac8rjf1w901u31exdi441g56pyo'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Medal,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Medal]' />
              <groupfilter function='level-members' level='[region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[tyr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Sex,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Medal,Region)]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Sex,Sport)]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Season,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[Longitude (generated)]' field-type='quantitative' max='21874812.323961247' min='-18688938.173520803' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[Latitude (generated)]' field-type='quantitative' max='11997087.698101191' min='-4695813.4625989813' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-bg-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute-sub' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents' value='true' />
            <format attr='enabled' id='light-admin1-water-lines-usa-tableau' value='true' />
            <format attr='enabled' id='light-9-dash-line-casing' value='true' />
            <format attr='enabled' id='light-9-dash-line' value='true' />
            <format attr='enabled' id='light-admin-0-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-0-label-1st-tier' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='tunnel-service-link-track-case' value='true' />
            <format attr='enabled' id='tunnel-street_limited-case' value='true' />
            <format attr='enabled' id='tunnel-street-case' value='true' />
            <format attr='enabled' id='tunnel-secondary-tertiary-case' value='true' />
            <format attr='enabled' id='tunnel-primary-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link-case' value='true' />
            <format attr='enabled' id='tunnel-motorway_link-case' value='true' />
            <format attr='enabled' id='tunnel-trunk-case' value='true' />
            <format attr='enabled' id='tunnel-motorway-case' value='true' />
            <format attr='enabled' id='tunnel-trunk_link' value='true' />
            <format attr='enabled' id='tunnel-motorway_link' value='true' />
            <format attr='enabled' id='tunnel-service-link-track' value='true' />
            <format attr='enabled' id='tunnel-street_limited' value='true' />
            <format attr='enabled' id='tunnel-street' value='true' />
            <format attr='enabled' id='tunnel-tertiary' value='true' />
            <format attr='enabled' id='tunnel-secondary' value='true' />
            <format attr='enabled' id='tunnel-primary' value='true' />
            <format attr='enabled' id='tunnel-trunk' value='true' />
            <format attr='enabled' id='tunnel-motorway' value='true' />
            <format attr='enabled' id='road-street-low' value='true' />
            <format attr='enabled' id='road-street_limited-low' value='true' />
            <format attr='enabled' id='road-pedestrian-case' value='true' />
            <format attr='enabled' id='road-service-link-track-case' value='true' />
            <format attr='enabled' id='road-street_limited-case' value='true' />
            <format attr='enabled' id='road-street-case' value='true' />
            <format attr='enabled' id='road-tertiary-case' value='true' />
            <format attr='enabled' id='road-secondary-case' value='true' />
            <format attr='enabled' id='road-primary-case' value='true' />
            <format attr='enabled' id='road-motorway_link-case' value='true' />
            <format attr='enabled' id='road-trunk_link-case' value='true' />
            <format attr='enabled' id='road-trunk-case' value='true' />
            <format attr='enabled' id='road-motorway-case' value='true' />
            <format attr='enabled' id='road-trunk_link' value='true' />
            <format attr='enabled' id='road-motorway_link' value='true' />
            <format attr='enabled' id='road-path' value='true' />
            <format attr='enabled' id='road-pedestrian' value='true' />
            <format attr='enabled' id='road-polygon' value='true' />
            <format attr='enabled' id='road-service-link-track' value='true' />
            <format attr='enabled' id='road-street_limited' value='true' />
            <format attr='enabled' id='road-street' value='true' />
            <format attr='enabled' id='road-tertiary' value='true' />
            <format attr='enabled' id='road-secondary' value='true' />
            <format attr='enabled' id='road-primary' value='true' />
            <format attr='enabled' id='road-trunk' value='true' />
            <format attr='enabled' id='road-motorway' value='true' />
            <format attr='enabled' id='road-rail' value='true' />
            <format attr='enabled' id='road-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-street-low' value='true' />
            <format attr='enabled' id='bridge-street_limited-low' value='true' />
            <format attr='enabled' id='bridge-pedestrian-case' value='true' />
            <format attr='enabled' id='bridge-service-link-track-case' value='true' />
            <format attr='enabled' id='bridge-street_limited-case' value='true' />
            <format attr='enabled' id='bridge-street-case' value='true' />
            <format attr='enabled' id='bridge-tertiary-case' value='true' />
            <format attr='enabled' id='bridge-secondary-case' value='true' />
            <format attr='enabled' id='bridge-primary-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-case' value='true' />
            <format attr='enabled' id='bridge-trunk-case' value='true' />
            <format attr='enabled' id='bridge-motorway-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link' value='true' />
            <format attr='enabled' id='bridge-motorway_link' value='true' />
            <format attr='enabled' id='bridge-path' value='true' />
            <format attr='enabled' id='bridge-pedestrian' value='true' />
            <format attr='enabled' id='bridge-service-link-track' value='true' />
            <format attr='enabled' id='bridge-street_limited' value='true' />
            <format attr='enabled' id='bridge-street' value='true' />
            <format attr='enabled' id='bridge-tertiary' value='true' />
            <format attr='enabled' id='bridge-secondary' value='true' />
            <format attr='enabled' id='bridge-primary' value='true' />
            <format attr='enabled' id='bridge-trunk' value='true' />
            <format attr='enabled' id='bridge-motorway' value='true' />
            <format attr='enabled' id='bridge-rail' value='true' />
            <format attr='enabled' id='bridge-rail-tracks' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk-2-case' value='true' />
            <format attr='enabled' id='bridge-motorway-2-case' value='true' />
            <format attr='enabled' id='bridge-trunk_link-2' value='true' />
            <format attr='enabled' id='bridge-motorway_link-2' value='true' />
            <format attr='enabled' id='bridge-trunk-2' value='true' />
            <format attr='enabled' id='bridge-motorway-2' value='true' />
            <format attr='enabled' id='road-shields-2-white' value='true' />
            <format attr='enabled' id='road-shields-2-black' value='true' />
            <format attr='enabled' id='road-shields-1-white' value='true' />
            <format attr='enabled' id='road-shields-1-black' value='true' />
            <format attr='enabled' id='road-label-small' value='true' />
            <format attr='enabled' id='road-label-big' value='true' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]' value='Year of Year'>
              <formatted-text>
                <run fontalignment='1'>Year of Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' />
              <lod column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Country:nk]' />
              <lod column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:City:nk]' />
              <lod column='[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]' />
              <geometry column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>City:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:City:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Times New Roman' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='2.9944751262664795' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ac8rjf1w901u31exdi441g56pyo].[Latitude (generated)]</rows>
        <cols>[federated.1ac8rjf1w901u31exdi441g56pyo].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{705C1B2D-E054-4B5B-AA05-4B36117025DD}' />
    </worksheet>
    <worksheet name='Sport with most medals'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 sports medal count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='federated.1ac8rjf1w901u31exdi441g56pyo' />
          </datasources>
          <datasource-dependencies datasource='federated.1ac8rjf1w901u31exdi441g56pyo'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='CountD' name='[ctd:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Medal,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Medal]' />
              <groupfilter function='level-members' level='[region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[tyr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Athletics&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Fencing&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Football&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Gymnastics&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Hockey&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Ice Hockey&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Rowing&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Sailing&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Swimming&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Wrestling&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]' direction='DESC' using='[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]' />
          <slices>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Medal,Region)]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (City,Country,Season,YEAR(Year))]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Season,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[cnt:Name:qk]' scope='rows' value='Number of medals' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]' value='Sex'>
              <formatted-text>
                <run fontalignment='1'>Sex</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Sex:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sport:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Athletes won medals:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[cnt:Name:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ac8rjf1w901u31exdi441g56pyo].[cnt:Name:qk]</rows>
        <cols>([federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk] / [federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk])</cols>
      </table>
      <simple-id uuid='{502980A5-4E2F-41E3-BF7B-28F87EA83F1A}' />
    </worksheet>
    <worksheet name='Teams with medals'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medal Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='federated.1ac8rjf1w901u31exdi441g56pyo' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Teams' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ac8rjf1w901u31exdi441g56pyo'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Name]' derivation='CountD' name='[ctd:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' name='[region]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[tyr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Sex,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:region:nk]'>
            <groupfilter count='[Parameters].[Age Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Name])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:region:nk]' member='%null%' />
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:region:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:region:nk]' direction='DESC' using='[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]' />
          <slices>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:region:nk]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (City,Country,Season,YEAR(Year))]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Sex,Sport)]</column>
            <column>[federated.1ac8rjf1w901u31exdi441g56pyo].[Action (Season,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]' scope='cols' value='Count of medals' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='wrap' id='refline0' value='on' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Medal:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[none:region:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Medals:&#9;</run>
                <run bold='true'>&lt;[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4722652435302734' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:region:nk]</rows>
        <cols>[federated.1ac8rjf1w901u31exdi441g56pyo].[ctd:Name:qk]</cols>
      </table>
      <simple-id uuid='{01C512CA-A7A0-465A-865F-6DD25EADACB5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Olympic Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Light' fontsize='28'>Olympic Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='athlete_events-csv+ (Multiple Connections)' name='federated.1ac8rjf1w901u31exdi441g56pyo' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Teams' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range max='15' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1ac8rjf1w901u31exdi441g56pyo'>
        <column aggregation='CountD' datatype='string' name='[Medal]' role='dimension' type='nominal' />
        <column datatype='string' name='[Season]' role='dimension' type='nominal' />
        <column aggregation='CountD' datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='15' param='vert' type='layout-flow' w='99034' x='483' y='929'>
            <zone fixed-size='103' h='12892' id='16' is-fixed='true' type='title' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='85250' id='5' param='horz' type='layout-flow' w='99034' x='483' y='13821'>
              <zone h='85250' id='3' type='layout-basic' w='89378' x='483' y='13821'>
                <zone h='41892' id='1' name='Olympic hosted cities' w='44687' x='483' y='13821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43358' id='10' name='Event count vs years' w='44717' x='483' y='55713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43358' id='13' name='Sport with most medals' w='44661' x='45200' y='55713'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='41892' id='21' name='Teams with medals' w='44691' x='45170' y='13821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='85250' id='4' is-fixed='true' param='vert' type='layout-flow' w='9656' x='89861' y='13821'>
                <zone fixed-size='99' h='12427' id='11' is-fixed='true' name='Event count vs years' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' type='filter' values='relevant' w='9656' x='89861' y='13821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='255' h='30546' id='6' is-fixed='true' mode='checklist' name='Olympic hosted cities' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]' type='filter' values='relevant' w='9656' x='89861' y='26248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='17770' id='8' is-fixed='true' mode='checklist' name='Event count vs years' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]' type='filter' values='relevant' w='9656' x='89861' y='56794'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='12427' id='19' is-fixed='true' mode='radiolist' name='Sport with most medals' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]' type='filter' values='relevant' w='9656' x='89861' y='74564'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6504' id='23' mode='type_in' param='[Parameters].[Age Parameter]' type='paramctrl' w='9656' x='89861' y='86991'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='16144' id='17' param='C:/Users/Nihar/Downloads/31tNlIYVx+L._AC_SS350_.jpg' type='bitmap' w='25148' x='10202' y='1858' />
        <zone h='17073' id='20' is-scaled='1' param='C:/Users/Nihar/Downloads/Capture.PNG' type='bitmap' w='15993' x='69403' y='232' />
      </zones>
      <simple-id uuid='{8AD696F9-4AFA-4C39-8504-D7EE173F4477}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Olympic hosted cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[attr:Country:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[attr:Season:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Country:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Event:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Year:qk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{BFE1A2C4-CFFC-4E1E-B0B6-DB3BB0276708}' />
    </window>
    <window class='worksheet' name='Teams with medals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Age Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:NOC:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE3AC946-8E77-41DD-8745-93BADCFC4996}' />
    </window>
    <window class='worksheet' name='Event count vs years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='213'>
            <card param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC2A2407-5029-4B35-8903-0D5917671535}' />
    </window>
    <window class='worksheet' name='Sport with most medals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Medal:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sex:nk]</field>
            <field>[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Sport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EA61130-C782-4C06-BAB9-996441A33EAE}' />
    </window>
    <window class='dashboard' maximized='true' name='Olympic Dashboard'>
      <viewpoints>
        <viewpoint name='Event count vs years'>
          <zoom type='entire-view' />
          <highlight field='[federated.1ac8rjf1w901u31exdi441g56pyo].[none:Season:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Olympic hosted cities'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sport with most medals'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Teams with medals' />
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop' />
      <simple-id uuid='{462CD8CF-C32A-469A-9394-C470806512CD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Event count vs years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Olympic Dashboard' width='192'>
      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
      AyiqShJPJHESxyhpFb9ZXUHz2tx96xtcfuWjKFqBV197jaVGk1def41mySQCLqxf5UMf/hih
      3c3Pef3ePp/8Qx/NiR/gyvMv8aHXX8MZD7i10+GH/52P8LHXN3jrnX0W6lVGtoNuFriwtsZL
      H3gV3D1agwhUk1Gvxc2tFp/4+Me4enktP+eNzT0+8fGP8cHsexSdtQtrvPzyK9QrRQB2b38H
      JzFQi2X6rT2WlhYYDEco6nlW+PsJzy2VeOvWbazG2mEG2Hj1o9z6+u8wGA75wtdu8tFXsmob
      wQ9/7GX+8We+zoeeP15SOvaY9u49FPPd2su1Zokbm7vs7R/M/cxytcCtrX3eur7FxqUma1eu
      8fLlJb76je9QLRU4OGhjlpYoFVVeeOF5XnrhGjVTsLnTYnfvXVtibaHMOzPfUysX2Wu3CVL1
      a+HCFXQFXrh2jReev0KtucKHXn+Vr3/1K4+8iOf43sXzr/0A//pXf41XX38VZIooiuQXvvAF
      6btj+dZbb8mxG0gppez1elJKKQO7Iz/92c9LKaXs93oynvntuyP5S7/0y/LGzTsyThIZR54c
      DG2ZJIm8d+eW3G11J98TunIwcqSMI9nrD2WSxHLz9jvyoDuQUkrZbe3K6+/cllGcyCQO5c0b
      16XtBXI86Mi33r4u3SCSSRzJW+9cl3v7B9ILo8kNJIm8f+em3G11pTceSscPZRJH8uaN63Lk
      Bvl99DsH8u3rN2UQxdIZ9eVbb70tXT+U5/j+xec+97n894QOErm/vy+lnBihUsp3GWAekiSW
      f/D1N6TtRcd+SRz68vadzdO76nOc45QwzQCzOJHyK4TCaz/4kQceo2gGV69cPpUt6hzneFo4
      D4Sd432NQztAEAS0ej2i1BN0GlAAyzQBGNk2ZcvKW2F0u10sy0JRVWIpiZIEU1UxDYMgDAmj
      iFhKEIKCrqMAo/GYeq2Gbds4rsviwgJuEPAwT75MEiLfp1Gv599/UkRRxHA4RFVVhGE88ufP
      EjJJsAwD2/NQtKMbevY+QmD7PiQJcRShahq6olAoFE79mqIootvtYpZKaLp++D3fp1apTNZ0
      NEIvFs8sAVPXNMoPub8jK7bd7TJ0jnbsfVyoQcDzly4RhCHvbG3x6tWrE0ISAk3TGNs2g9EI
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Olympic hosted cities' width='192'>
      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
      aSaAZJoIIc4XOaWCVwZIhGA0HnPS7XJ8csL9p08ZjkbnHlJ24NdRey76fp3hK8vy8mbykrpl
      2zRtm4ppomb5+rnA2+ucPyteOWdr5Ny6+fuTJYlqtUoky2ipUbu9uclus0mSY4DwHYeNZhNZ
      khgNhzx69IjJZIIsSYtlO52st27domFZOOMxtatXKb4C56Zmmswch2+++eaFRfJCCIIwpPKG
      xSwiSdANY+HaTVct+OMzjOKYaao3v2t4sxlVy+LTTz9lPp+vDfg5sxlWuYwkSfizGTeuXl3+
      lhUj5ceTrutEKe39ZqWCNp9TXpnUy3EHECcJJ/M5YyEYxvGiP1MqabONV/EySbAqybPBl6+g
      ygbIqotz9Tj5FSTvdVrnLXjVa1tdAfr9/nKQBUHAo8eP2Ts8JFYUSLd153Mcx8GSJMLUG6Fb
      Fr+9d4/vnj1jpij0HIe9g4OFypaWY2YxkVs3byLmc8KVVeQiZF1bms3mC/sNj8djvLegZdFM
      E9kw6Kdlonn7rDcc8vWjR1jvobtlEseUNY3da9dwXXfJv5ph+Y5JW896Hp1a7VyuWhzHlMtl
      er3eOeF6Z2cHKQzZ7/fZaLXOldLmsVwTsg4qYRAslopX0PuzQZu5DLOX9KIKptXjZMGLvNRZ
      TatYVXdepgKtmxDL47GQ7qvb67rO2dkZ3W4Xq1DAT2uLo/mc2LIIo4jDbpdpENAqFonimDCd
      wIkQFFOffq3TYdLv85vf/Y4/+/nPUVWVL7/6iitbWzSbTbY6HQ5OTmi/QrdISZaxqlWqaY3w
      Rfc6Ho/RDOOti9q1cpnHR0cL5gxF4bDfJwTM98BYPe52mU8m1IpFRLOJ7/u0Wq3nVufBaMT+
      2RlaoUBZkmitdK0RYpEQmXXwzMZTqVTiI8tiOpthpoJoHZZPLPR9uk+eUFRVrjca1F5w09mA
      z6sr2TL0urbDiyT5i2IG+b8vijVk15mhO53iXCB9i8UiV65c4ac//SlxGqmVZBm9WGSWJOyd
      nuJJEoqmMQxDQl1fCI01Bmq50UAyDKZpV/NWs8nX33/Pvfv3iaKI8koKyItQajR4ure3VgXK
      nAePHj9GecuOLnq6CniSxN5oxONul1hV3ykFfAbfdRmfnPD5xx+zu7uLaZoYqY8+/84fP33K
      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
      DraUnz394v8DHC1A0wtzz8wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sport with most medals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Teams with medals' width='192'>
      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
      qwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
