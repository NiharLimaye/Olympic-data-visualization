<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ISO8601DefaultCalendarPref />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Olympicdashboard' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Teams' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='athlete_events-csv+ (Multiple Connections)' inline='true' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' version='18.1'>
      <connection channel='https' class='sqlproxy' dbname='athlete_events-csvMultipleConnections' directory='/dataserver' port='443' server='eu-west-1a.online.tableau.com' server-oauth='' username='' workgroup-auth-mode='as-is'>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='sqlproxy' table='[sqlproxy]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='measure'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>2</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>10</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Event</remote-alias>
            <ordinal>13</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>CountD</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Games</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Games]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Games</remote-alias>
            <ordinal>7</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Height]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Height</remote-alias>
            <ordinal>3</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Medal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Medal]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Medal</remote-alias>
            <ordinal>14</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>CountD</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC (noc!regions)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC (noc!regions)]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>NOC (noc!regions)</remote-alias>
            <ordinal>15</ordinal>
            <layered>true</layered>
            <family>noc_regions</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NOC]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>6</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>0</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>CountD</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Number of Records</remote-name>
            <remote-type>-1</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>21</ordinal>
            <layered>true</layered>
            <caption>Number of Records</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
              <attribute datatype='string' name='formula'>&quot;1&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>9</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>1</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>CountD</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>12</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>5</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>CountD</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weight]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Weight</remote-alias>
            <ordinal>4</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>8</ordinal>
            <layered>true</layered>
            <family>athlete_events-csv</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='field-type'>0</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>16</ordinal>
            <layered>true</layered>
            <caption>Region</caption>
            <family>noc_regions</family>
            <local-type>string</local-type>
            <aggregation>CountD</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='integer' name='field-type'>2</attribute>
              <attribute datatype='integer' name='role'>0</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[sqlproxy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='boolean' name='CAP_CREATE_TEMP_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_ALWAYS_USE_LOCAL_MAPPING_TABLES'>false</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_PREFER_LOCAL_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_BLENDING_REMOTE_MAPPING_TABLES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_CASE_INSENSITIVE_CONTAINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SORT_BY'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERIES'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUBQUERY_QUERY_CONTEXT'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORTS_LODJOINS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_SUPPORT_ANALYTIC_FUNCTIONS'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_TOP_N'>true</attribute>
              <attribute datatype='boolean' name='CAP_QUERY_USE_QUERY_FUSION'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_LEFT'>true</attribute>
              <attribute datatype='boolean' name='CAP_SUPPORTS_SPLIT_FROM_RIGHT'>true</attribute>
              <attribute datatype='integer' name='charset'>0</attribute>
              <attribute datatype='string' name='collation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='datasource'>&quot;<![CDATA[<?xml version='1.0' encoding='utf-8' ?>

<datasource :source-version='18.1' formatted-name='athlete_events-csv+ (Multiple Connections)' inline='true' version='18.1' xml:base='https://eu-west-1a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <ObjectModelEncapsulateLegacy />
    <SchemaViewerObjectModel />
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='athlete_events-csvMultipleConnections' path='/t/nihartableau/datasources' revision='1.0' site='nihartableau' />
  <connection channel='https' class='sqlproxy' dbname='athlete_events-csvMultipleConnections' directory='/dataserver' port='443' server='eu-west-1a.online.tableau.com'>
    <relation name='sqlproxy' table='[sqlproxy]' type='table' />
    <cols>
      <map key='[Age]' value='[sqlproxy].[Age]' />
      <map key='[City]' value='[sqlproxy].[City]' />
      <map key='[Country]' value='[sqlproxy].[Country]' />
      <map key='[Event]' value='[sqlproxy].[Event]' />
      <map key='[Games]' value='[sqlproxy].[Games]' />
      <map key='[Height]' value='[sqlproxy].[Height]' />
      <map key='[Medal]' value='[sqlproxy].[Medal]' />
      <map key='[NOC (noc!regions)]' value='[sqlproxy].[NOC (noc!regions)]' />
      <map key='[NOC]' value='[sqlproxy].[NOC]' />
      <map key='[Name]' value='[sqlproxy].[Name]' />
      <map key='[Number of Records]' value='[sqlproxy].[Number of Records]' />
      <map key='[Season]' value='[sqlproxy].[Season]' />
      <map key='[Sex]' value='[sqlproxy].[Sex]' />
      <map key='[Sport]' value='[sqlproxy].[Sport]' />
      <map key='[Team]' value='[sqlproxy].[Team]' />
      <map key='[Weight]' value='[sqlproxy].[Weight]' />
      <map key='[Year]' value='[sqlproxy].[Year]' />
      <map key='[region]' value='[sqlproxy].[region]' />
    </cols>
  </connection>
  <aliases enabled='yes' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
    <semantic-values semantic-role='[Geographical].[Longitude]'>
      <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
      <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
      <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
      <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
      <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
      <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
      <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
      <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
    </semantic-values>
    <semantic-values semantic-role='[Geographical].[Latitude]'>
      <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
      <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
      <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
      <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
      <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
      <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
      <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
      <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
    </semantic-values>
    <semantic-values semantic-role='[City].[Name]'>
      <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
      <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
    </semantic-values>
  </column>
  <column aggregation='Count' datatype='string' default-type='nominal' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
    <semantic-values semantic-role='[Country].[Name]'>
      <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
    </semantic-values>
  </column>
  <column aggregation='CountD' datatype='string' default-type='nominal' name='[Event]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='CountD' datatype='string' default-type='nominal' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Sum' datatype='integer' default-type='quantitative' name='[Number of Records]' pivot='key' role='measure' type='quantitative' user-datatype='integer' user:auto-column='numrec' visual-totals='Default'>
    <calculation class='tableau' formula='1' />
  </column>
  <column aggregation='Count' datatype='string' default-type='nominal' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='CountD' datatype='string' default-type='nominal' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Count' datatype='string' default-type='nominal' name='[Sport]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='CountD' datatype='string' default-type='nominal' name='[Team]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column aggregation='Year' datatype='date' default-type='quantitative' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
  <column aggregation='CountD' caption='Region' datatype='string' default-type='nominal' name='[region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
  <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
  <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
  <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
  <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
  <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
  <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
  <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
  <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
  <group caption='Action (City,Country,Season,YEAR(Year))' hidden='true' name='[Action (City,Country,Season,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
    <groupfilter function='crossjoin'>
      <groupfilter function='level-members' level='[City]' />
      <groupfilter function='level-members' level='[Country]' />
      <groupfilter function='level-members' level='[Season]' />
      <groupfilter function='level-members' level='[yr:Year:ok]' />
    </groupfilter>
  </group>
  <group caption='Action (Medal,Region)' hidden='true' name='[Action (Medal,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
    <groupfilter function='crossjoin'>
      <groupfilter function='level-members' level='[Medal]' />
      <groupfilter function='level-members' level='[region]' />
    </groupfilter>
  </group>
  <group caption='Action (Season,YEAR(Year))' hidden='true' name='[Action (Season,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
    <groupfilter function='crossjoin'>
      <groupfilter function='level-members' level='[Season]' />
      <groupfilter function='level-members' level='[tyr:Year:ok]' />
    </groupfilter>
  </group>
  <group caption='Action (Sex,Sport)' hidden='true' name='[Action (Sex,Sport)]' name-style='unqualified' user:auto-column='sheet_link'>
    <groupfilter function='crossjoin'>
      <groupfilter function='level-members' level='[Sex]' />
      <groupfilter function='level-members' level='[Sport]' />
    </groupfilter>
  </group>
  <group name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
    <groupfilter function='crossjoin'>
      <groupfilter function='union'>
        <groupfilter function='member' level='[Medal]' member='&quot;Bronze&quot;' />
        <groupfilter function='member' level='[Medal]' member='&quot;Gold&quot;' />
        <groupfilter function='member' level='[Medal]' member='&quot;Silver&quot;' />
      </groupfilter>
      <groupfilter function='union'>
        <groupfilter function='member' level='[region]' member='&quot;France&quot;' />
        <groupfilter function='member' level='[region]' member='&quot;Germany&quot;' />
        <groupfilter function='member' level='[region]' member='&quot;Italy&quot;' />
        <groupfilter function='member' level='[region]' member='&quot;Russia&quot;' />
        <groupfilter function='member' level='[region]' member='&quot;UK&quot;' />
        <groupfilter function='member' level='[region]' member='&quot;USA&quot;' />
      </groupfilter>
    </groupfilter>
  </group>
  <drill-paths>
    <drill-path name='Country, City'>
      <field>[Country]</field>
      <field>[City]</field>
    </drill-path>
  </drill-paths>
  <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
  <style>
    <style-rule element='mark'>
      <encoding attr='color' field='[none:region:nk]' type='palette'>
        <map to='\#499894'>
          <bucket>&quot;Afghanistan&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Argentina&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Australia&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Estonia&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Morocco&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Mozambique&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Uganda&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Burundi&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Guyana&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Pakistan&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Puerto Rico&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Serbia&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Slovakia&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;USA&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Brazil&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;France&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Ghana&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Haiti&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Iran&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Kuwait&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Sri Lanka&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Armenia&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;China&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Curacao&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;India&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Slovenia&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Sudan&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Syria&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>\%null\%</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Barbados&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Greece&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Iceland&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Namibia&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Netherlands&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Portugal&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Austria&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Dominican Republic&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Italy&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Lithuania&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Macedonia&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Tanzania&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Trinidad&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Georgia&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Grenada&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Jamaica&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Kyrgyzstan&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Malaysia&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;South Korea&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Bahamas&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Costa Rica&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Iraq&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Israel&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Romania&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Russia&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Turkey&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Bahrain&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Chile&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Denmark&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Eritrea&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Mexico&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Montenegro&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Virgin Islands, US&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Colombia&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Cuba&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Luxembourg&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Mauritius&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Sweden&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;United Arab Emirates&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Uruguay&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Croatia&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Cyprus&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Ethiopia&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Japan&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Lebanon&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Peru&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Suriname&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Djibouti&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Finland&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Ireland&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Qatar&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;South Africa&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Togo&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Venezuela&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Czech Republic&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Fiji&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Gabon&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Ivory Coast&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Nigeria&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Thailand&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Guatemala&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Kenya&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Latvia&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Philippines&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Poland&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Vietnam&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Azerbaijan&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Bermuda&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Hungary&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Nepal&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;New Zealand&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Paraguay&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Bulgaria&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Cameroon&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Canada&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Monaco&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Saudi Arabia&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Taiwan&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Zambia&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Germany&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Jordan&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Kazakhstan&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Moldova&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Mongolia&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Niger&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Spain&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Algeria&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Belarus&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Ecuador&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Switzerland&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Tajikistan&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Tonga&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Uzbekistan&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Botswana&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Indonesia&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Liechtenstein&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Norway&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Senegal&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Ukraine&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Zimbabwe&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Belgium&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Egypt&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Kosovo&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;North Korea&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Panama&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Tunisia&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;UK&quot;</bucket>
        </map>
      </encoding>
      <encoding attr='color' field='[none:Sex:nk]' type='palette'>
        <map to='\#4e79a7'>
          <bucket>&quot;F&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;M&quot;</bucket>
        </map>
      </encoding>
      <encoding attr='color' field='[none:Season:nk]' type='palette'>
        <map to='\#4e79a7'>
          <bucket>&quot;Winter&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Summer&quot;</bucket>
        </map>
      </encoding>
      <encoding attr='color' field='[none:Sport:nk]' type='palette'>
        <map to='\#499894'>
          <bucket>&quot;Basketball&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Handball&quot;</bucket>
        </map>
        <map to='\#499894'>
          <bucket>&quot;Short Track Speed Skating&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Aeronautics&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Diving&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Racquets&quot;</bucket>
        </map>
        <map to='\#4e79a7'>
          <bucket>&quot;Triathlon&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Art Competitions&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Football&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Rugby&quot;</bucket>
        </map>
        <map to='\#59a14f'>
          <bucket>&quot;Weightlifting&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Bobsleigh&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Judo&quot;</bucket>
        </map>
        <map to='\#79706e'>
          <bucket>&quot;Softball&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Basque Pelota&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Hockey&quot;</bucket>
        </map>
        <map to='\#86bcb6'>
          <bucket>&quot;Skeleton&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Athletics&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Freestyle Skiing&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Rugby Sevens&quot;</bucket>
        </map>
        <map to='\#8cd17d'>
          <bucket>&quot;Wrestling&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Curling&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Nordic Combined&quot;</bucket>
        </map>
        <map to='\#9d7660'>
          <bucket>&quot;Tennis&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Alpine Skiing&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Equestrianism&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
        </map>
        <map to='\#a0cbe8'>
          <bucket>&quot;Tug-Of-War&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Croquet&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Modern Pentathlon&quot;</bucket>
        </map>
        <map to='\#b07aa1'>
          <bucket>&quot;Table Tennis&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Badminton&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Golf&quot;</bucket>
        </map>
        <map to='\#b6992d'>
          <bucket>&quot;Sailing&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Boxing&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Lacrosse&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Speed Skating&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Canoeing&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Luge&quot;</bucket>
        </map>
        <map to='\#d37295'>
          <bucket>&quot;Swimming&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Cross Country Skiing&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Motorboating&quot;</bucket>
        </map>
        <map to='\#d4a6c8'>
          <bucket>&quot;Taekwondo&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Cycling&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Polo&quot;</bucket>
        </map>
        <map to='\#d7b5a6'>
          <bucket>&quot;Trampolining&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Beach Volleyball&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Ice Hockey&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Ski Jumping&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Baseball&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Gymnastics&quot;</bucket>
        </map>
        <map to='\#f1ce63'>
          <bucket>&quot;Shooting&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Alpinism&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Fencing&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Roque&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Volleyball&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Cricket&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Military Ski Patrol&quot;</bucket>
        </map>
        <map to='\#fabfd2'>
          <bucket>&quot;Synchronized Swimming&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Biathlon&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Jeu De Paume&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>&quot;Snowboarding&quot;</bucket>
        </map>
        <map to='\#ff9d9a'>
          <bucket>\%all\%</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Archery&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Figure Skating&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Rowing&quot;</bucket>
        </map>
        <map to='\#ffbe7d'>
          <bucket>&quot;Water Polo&quot;</bucket>
        </map>
      </encoding>
      <encoding attr='color' field='[none:Medal:nk]' type='palette'>
        <map to='\#9c755f'>
          <bucket>&quot;NA&quot;</bucket>
        </map>
        <map to='\#bab0ac'>
          <bucket>&quot;Silver&quot;</bucket>
        </map>
        <map to='\#e15759'>
          <bucket>&quot;Bronze&quot;</bucket>
        </map>
        <map to='\#f28e2b'>
          <bucket>&quot;Gold&quot;</bucket>
        </map>
      </encoding>
    </style-rule>
  </style>
  <semantic-values>
    <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
  </semantic-values>
  <default-sorts>
    <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
      <dictionary>
        <bucket>&quot;Actual&quot;</bucket>
        <bucket>&quot;Estimate&quot;</bucket>
      </dictionary>
    </manual-sort>
  </default-sorts>
  <object-graph is-legacy='true'>
    <objects>
      <object id='Migrated Data'>
        <properties context=''>
          <relation name='sqlproxy' table='[sqlproxy]' type='table' />
        </properties>
      </object>
    </objects>
  </object-graph>
</datasource>
]]>&quot;</attribute>
              <attribute datatype='string' name='dialect-definition'>&quot;<![CDATA[<dialect-definition>
  <primary-dialect class='hyper' version='0.0.0'>
  </primary-dialect>
</dialect-definition>
]]>&quot;</attribute>
              <attribute datatype='boolean' name='extract-active'>true</attribute>
              <attribute datatype='boolean' name='fast-get-server-time'>true</attribute>
              <attribute datatype='string' name='update-time'>&quot;5/15/2020 9:35:18 PM&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <overridable-settings>
        <date-options fiscal-year-start='january' start-of-week='sunday' />
        <default-date-format />
        <default-calendar-type>Gregorian</default-calendar-type>
      </overridable-settings>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[Age]' pivot='key' role='measure' type='quantitative' user-datatype='integer' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
          <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
          <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
          <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
          <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
          <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
          <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
          <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
          <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
          <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
          <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
          <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
          <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
          <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
          <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
        </semantic-values>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
          <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
        </semantic-values>
      </column>
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
        </semantic-values>
      </column>
      <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Event]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Games]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Height]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[NOC (noc!regions)]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[NOC]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' layered='true' name='[Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Sum' datatype='integer' default-type='quantitative' layered='true' name='[Number of Records]' pivot='key' role='measure' type='quantitative' user-datatype='integer' user:auto-column='numrec' visual-totals='Default'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sport]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Team]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Weight]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Region' datatype='string' default-type='nominal' layered='true' name='[region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
      <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group auto-hidden='true' caption='Action (City,Country,Season,YEAR(Year))' hidden='true' layered='true' name='[Action (City,Country,Season,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Medal)' hidden='true' name='[Action (Medal)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Medal]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Medal,Region)' hidden='true' layered='true' name='[Action (Medal,Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Medal]' />
          <groupfilter function='level-members' level='[region]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Season,YEAR(Year))' hidden='true' layered='true' name='[Action (Season,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Season]' />
          <groupfilter function='level-members' level='[tyr:Year:ok]' />
        </groupfilter>
      </group>
      <group auto-hidden='true' caption='Action (Sex,Sport)' hidden='true' layered='true' name='[Action (Sex,Sport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sex]' />
          <groupfilter function='level-members' level='[Sport]' />
        </groupfilter>
      </group>
      <group layered='true' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='union'>
            <groupfilter function='member' level='[Medal]' member='&quot;Bronze&quot;' />
            <groupfilter function='member' level='[Medal]' member='&quot;Gold&quot;' />
            <groupfilter function='member' level='[Medal]' member='&quot;Silver&quot;' />
          </groupfilter>
          <groupfilter function='union'>
            <groupfilter function='member' level='[region]' member='&quot;France&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;Germany&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;Italy&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;Russia&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;UK&quot;' />
            <groupfilter function='member' level='[region]' member='&quot;USA&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path layered='true' name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='Migrated Data' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='H:/DCU Study/DM and DV/Assignment/athlete_events-csv+ (Multiple Connections).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/15/2020 09:46:46 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='athlete_events-csv+ (Multiple Connections)' increment-value='%null%' refresh-type='create' rows-inserted='39772' timestamp-start='2020-05-15 21:46:46.416' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Name</remote-alias>
              <ordinal>0</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15294</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sex</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sex]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sex</remote-alias>
              <ordinal>1</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>2</ordinal>
              <family>athlete_events-csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Height</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Height]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Height</remote-alias>
              <ordinal>3</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Weight</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Weight</remote-alias>
              <ordinal>4</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>5</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>458</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOC</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NOC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOC</remote-alias>
              <ordinal>6</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Games</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Games]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Games</remote-alias>
              <ordinal>7</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>8</ordinal>
              <family>athlete_events-csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Season</remote-alias>
              <ordinal>9</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>10</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>11</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sport</remote-alias>
              <ordinal>12</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>98</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Event</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Event]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Event</remote-alias>
              <ordinal>13</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1243</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Medal</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Medal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Medal</remote-alias>
              <ordinal>14</ordinal>
              <family>athlete_events-csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NOC (noc!regions)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[NOC (noc!regions)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NOC (noc!regions)</remote-alias>
              <ordinal>15</ordinal>
              <family>noc_regions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>167</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>region</remote-alias>
              <ordinal>16</ordinal>
              <family>noc_regions</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>155</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:Medal:nk]'>
          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Bronze&quot;' />
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Gold&quot;' />
            <groupfilter function='member' level='[none:Medal:nk]' member='&quot;Silver&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[none:Season:nk]'>
          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Summer&quot;' />
            <groupfilter function='member' level='[none:Season:nk]' member='&quot;Winter&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[none:Sex:nk]'>
          <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[yr:Year:ok]'>
          <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>%null%</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Virgin Islands, US&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Individual Olympic Athletes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sex:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Season:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sport:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aeronautics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Racquets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Art Competitions&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equestrianism&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tug-Of-War&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Speed Skating&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canoeing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Motorboating&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cycling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trampolining&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alpinism&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Military Ski Patrol&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeu De Paume&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>%all%</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Figure Skating&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Medal:nk]' type='palette'>
            <map to='#9c755f'>
              <bucket>&quot;NA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Silver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bronze&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gold&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation name='sqlproxy' table='[sqlproxy]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
      <datasources>
        <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
      </datasources>
      <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
        <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
        <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
        <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
        <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
        <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]'>
        <groupfilter function='level-members' level='[none:Medal:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]'>
        <groupfilter function='level-members' level='[none:Season:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]'>
        <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]'>
        <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sport with most medals' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sport' />
        <param name='target' value='Sport with most medals' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Olympic Dashboard' type='sheet' worksheet='Sheet 6' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Olympic Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Olympic Dashboard' type='sheet' worksheet='Olympic hosted cities' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Olympic Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Event count vs years'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Event count vs Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Event]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
            <column-instance column='[Event]' derivation='CountD' name='[ctd:Event:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' default-type='nominal' layered='true' name='[region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]'>
            <groupfilter function='level-members' level='[Medal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Medal]' />
              <groupfilter function='level-members' level='[region]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal,Region)]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[ctd:Event:qk]' scope='rows' value='Sports events' />
            <format attr='title' class='0' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[tyr:Year:qk]' scope='cols' value='Years' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' value='Seasons'>
              <formatted-text>
                <run fontalignment='1'>Seasons</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' value='Season'>
              <formatted-text>
                <run fontalignment='1'>Season</run>
              </formatted-text>
            </format>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' value='Medal'>
              <formatted-text>
                <run fontalignment='1'>Medal</run>
              </formatted-text>
            </format>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]' value='Years'>
              <formatted-text>
                <run fontalignment='1'>Years</run>
              </formatted-text>
            </format>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]' value='Gender'>
              <formatted-text>
                <run fontalignment='1'>Gender</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Season:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[tyr:Year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Events:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[ctd:Event:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.637182354927063' />
                <format attr='line-interpolation' value='step' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[ctd:Event:qk]</rows>
        <cols>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[tyr:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>No matches due to WWII</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#1939-07-11 22:09:38.457#'>
                  <node-reference>
                    <axis>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[tyr:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='141.62307692307692'>
                  <node-reference>
                    <axis>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[ctd:Event:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='120' y='-96' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9C90E9EC-EDBE-4809-AF77-118C86771854}' />
    </worksheet>
    <worksheet name='Medal Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' layered='true' name='[Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]'>
            <groupfilter function='level-members' level='[Medal]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' value='Medals'>
              <formatted-text>
                <run fontalignment='1'>Medals</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' value='Season'>
              <formatted-text>
                <run fontalignment='1'>Season</run>
              </formatted-text>
            </format>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]' value='Sex'>
              <formatted-text>
                <run fontalignment='1'>Sex</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' />
              <text column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{708CB2B7-D26E-4337-A7E8-438E79B009E5}' />
    </worksheet>
    <worksheet name='Olympic hosted cities'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sport]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' default-type='nominal' layered='true' name='[region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]'>
            <groupfilter function='level-members' level='[Medal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Medal]' />
              <groupfilter function='level-members' level='[region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Sex,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal,Region)]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Sex,Sport)]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Longitude (generated)]' field-type='quantitative' max='15459081.005871773' min='-15960506.780412778' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Latitude (generated)]' field-type='quantitative' max='12389037.070776548' min='-2204760.6167437313' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
            <format attr='wrap' value='true' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]' value='Year'>
              <formatted-text>
                <run fontalignment='1'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' />
              <lod column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Country:nk]' />
              <lod column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:City:nk]' />
              <lod column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]' />
              <lod column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Longitude (generated)]' />
              <geometry column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>City:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:City:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Times New Roman' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='2.9944751262664795' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Latitude (generated)]</rows>
        <cols>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{705C1B2D-E054-4B5B-AA05-4B36117025DD}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' layered='true' name='[Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' />
              <text column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Name:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2853591442108154' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</cols>
      </table>
      <simple-id uuid='{BCB83D28-87AB-48F3-BE8F-365D2EB76245}' />
    </worksheet>
    <worksheet name='Sport with most medals'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Top 10 sports medal count</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
          </datasources>
          <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' layered='true' name='[Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sport]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' default-type='nominal' layered='true' name='[region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]'>
            <groupfilter function='level-members' level='[Medal]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal,Region)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Medal]' />
              <groupfilter function='level-members' level='[region]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Athletics&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Fencing&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Football&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Gymnastics&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Hockey&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Ice Hockey&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Rowing&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Sailing&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Swimming&quot;' />
              <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Wrestling&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]' direction='DESC' using='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' />
          <slices>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal,Region)]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Medal)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' scope='rows' value='Count of Athletes' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]' value='Sex'>
              <formatted-text>
                <run fontalignment='1'>Sex</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Sex:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sport:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Athletes won medals:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]</rows>
        <cols>([sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk] / [sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk])</cols>
      </table>
      <simple-id uuid='{502980A5-4E2F-41E3-BF7B-28F87EA83F1A}' />
    </worksheet>
    <worksheet name='Teams with medals'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Medal Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top Teams' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[City]' pivot='key' role='dimension' semantic-role='[City].[Name]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='-84.386330000000001' />
                <semantic-value key='&quot;Chamonix&quot;' value='6.8693999999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='12.1357' />
                <semantic-value key='&quot;Lake Placid&quot;' value='-81.362846000000005' />
                <semantic-value key='&quot;Moskva&quot;' value='37.6173' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='9.8354999999999997' />
                <semantic-value key='&quot;Sarajevo&quot;' value='18.4131' />
                <semantic-value key='&quot;St. Louis&quot;' value='-90.199402000000006' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Atlanta&quot;' value='33.753746' />
                <semantic-value key='&quot;Chamonix&quot;' value='45.923699999999997' />
                <semantic-value key='&quot;Cortina d&apos;Ampezzo&quot;' value='46.540500000000002' />
                <semantic-value key='&quot;Lake Placid&quot;' value='27.293099999999999' />
                <semantic-value key='&quot;Moskva&quot;' value='55.755800000000001' />
                <semantic-value key='&quot;Sankt Moritz&quot;' value='46.4908' />
                <semantic-value key='&quot;Sarajevo&quot;' value='43.856299999999997' />
                <semantic-value key='&quot;St. Louis&quot;' value='38.627003000000002' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Athina&quot;' value='&quot;Athens&quot;' />
                <semantic-value key='&quot;Torino&quot;' value='&quot;Turin&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Country]' pivot='key' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' user-datatype='string' visual-totals='Default'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Yugoslavia&quot;' value='&quot;Serbia&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' layered='true' name='[Name]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Sport]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
            <column-instance column='[Name]' derivation='Count' name='[cnt:Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' caption='Region' datatype='string' default-type='nominal' layered='true' name='[region]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Season]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Sex,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Sex]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:region:nk]'>
            <groupfilter count='[Parameters].[Age Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([Name])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:region:nk]' member='%null%' />
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:region:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:region:nk]' direction='DESC' using='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' />
          <slices>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:region:nk]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (City,Country,Season,YEAR(Year))]</column>
            <column>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[Action (Sex,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='wrap' id='refline0' value='on' />
            <format attr='text-align' id='refline0' value='right' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='off' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' value='Medals'>
              <formatted-text>
                <run fontalignment='1'>Medals</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' />
            </encodings>
            <reference-line axis-column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='value' scope='per-cell' value-column='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Medal:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:region:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Medals:&#9;</run>
                <run bold='true'><![CDATA[<[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4722652435302734' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:region:nk]</rows>
        <cols>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[cnt:Name:qk]</cols>
      </table>
      <simple-id uuid='{01C512CA-A7A0-465A-865F-6DD25EADACB5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Olympic Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Light' fontsize='28'>Olympic Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='athlete_events-csv+ (Multiple Connections)' name='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Teams' datatype='integer' name='[Age Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range max='15' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='sqlproxy.1lr63i30xl1b2p18slsu40lwl12c'>
        <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Medal]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
        <column aggregation='Count' datatype='string' default-type='nominal' layered='true' name='[Season]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
        <column aggregation='CountD' datatype='string' default-type='nominal' layered='true' name='[Sex]' pivot='key' role='dimension' type='nominal' user-datatype='string' visual-totals='Default' />
        <column aggregation='Year' datatype='date' default-type='quantitative' layered='true' name='[Year]' pivot='key' role='dimension' type='quantitative' user-datatype='date' visual-totals='Default' />
        <column-instance column='[Medal]' derivation='None' name='[none:Medal:nk]' pivot='key' type='nominal' />
        <column-instance column='[Season]' derivation='None' name='[none:Season:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='50' param='vert' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='8478' id='51' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='89664' id='48' w='99034' x='483' y='9407'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89664' id='15' param='vert' w='99034' x='483' y='9407'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='89664' id='5' param='horz' w='99034' x='483' y='9407'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='89664' id='3' w='89559' x='483' y='9407'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='46541' id='33' param='horz' w='89559' x='483' y='9407'>
                      <zone h='46541' id='34' name='Olympic hosted cities' w='44840' x='483' y='9407'>
                        <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='46541' id='35' param='vert' w='44719' x='45323' y='9407'>
                        <zone h='46541' id='36' name='Teams with medals' w='44719' x='45323' y='9407'>
                          <layout-cache fixed-size-h='433' minwidth='200' type-h='fixed' type-w='scalable' />
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='solid' />
                            <format attr='border-width' value='1' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='43123' id='38' param='vert' w='36119' x='483' y='55948'>
                      <zone h='43123' id='39' name='Event count vs years' w='36119' x='483' y='55948'>
                        <layout-cache minheight='213' type-h='scalable' type-w='fixed' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='43123' id='41' param='horz' w='53440' x='36602' y='55948'>
                      <zone fixed-size='572' h='43123' id='42' is-fixed='true' name='Sport with most medals' w='35003' x='36602' y='55948'>
                        <layout-cache minheight='291' type-h='scalable' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='43123' id='53' name='Medal Count' w='18437' x='71605' y='55948'>
                        <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='157' h='89664' id='4' is-fixed='true' param='vert' w='9475' x='90042' y='9407'>
                    <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3368' id='32' w='9475' x='90042' y='9407'>
                      <formatted-text>
                        <run fontalignment='1'>Filters</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='99' h='12427' id='11' is-fixed='true' name='Event count vs years' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' values='relevant' w='9475' x='90042' y='12775'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='74' h='9524' id='6' is-fixed='true' mode='checkdropdown' name='Event count vs years' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]' values='relevant' w='9475' x='90042' y='25202'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='99' h='12427' id='19' is-fixed='true' mode='radiolist' name='Event count vs years' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]' values='relevant' w='9475' x='90042' y='34726'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='6504' id='23' mode='type_in' param='[Parameters].[Age Parameter]' w='9475' x='90042' y='47153'>
                      <formatted-text>
                        <run fontalignment='1'>Top Teams</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='15099' id='37' name='Teams with medals' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' w='9475' x='90042' y='53657'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8595' id='40' name='Event count vs years' pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' w='9475' x='90042' y='68756'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11034' id='54' name='Medal Count' pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' w='9475' x='90042' y='77351'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='solid' />
                        <format attr='border-width' value='1' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6852' id='52' name='Sheet 6' show-title='false' w='15751' x='68075' y='1626'>
          <layout-cache type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
      <simple-id uuid='{8AD696F9-4AFA-4C39-8504-D7EE173F4477}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Olympic hosted cities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]' type='filter' />
            <card pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[attr:Country:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[attr:Season:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Country:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Event:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Year:qk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{BFE1A2C4-CFFC-4E1E-B0B6-DB3BB0276708}' />
    </window>
    <window class='worksheet' name='Teams with medals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' type='filter' />
            <card pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Age Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:NOC:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE3AC946-8E77-41DD-8745-93BADCFC4996}' />
    </window>
    <window class='worksheet' name='Event count vs years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='212'>
            <card param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' type='filter' />
            <card pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Season:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC2A2407-5029-4B35-8903-0D5917671535}' />
    </window>
    <window class='worksheet' name='Sport with most medals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]' type='filter' />
            <card pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sex:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Sport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EA61130-C782-4C06-BAB9-996441A33EAE}' />
    </window>
    <window class='worksheet' name='Medal Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</field>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24CF05A0-58FB-4A1C-86DD-F2D473044287}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[sqlproxy.1lr63i30xl1b2p18slsu40lwl12c].[none:Medal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6E720CB1-C0E7-448F-8665-844C140B2CEC}' />
    </window>
    <window class='dashboard' maximized='true' name='Olympic Dashboard'>
      <viewpoints>
        <viewpoint name='Event count vs years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Medal Count'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Olympic hosted cities'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
        </viewpoint>
        <viewpoint name='Sheet 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sport with most medals'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Teams with medals' />
      </viewpoints>
      <active id='37' />
      <device-preview selected='Desktop'>
        <device name='Samsung Galaxy Note 5' type='Phone' />
      </device-preview>
      <simple-id uuid='{462CD8CF-C32A-469A-9394-C470806512CD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Event count vs years' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZxUlEQVR4nO3de2xk133Y8e99zPvN4fD9XC7J5a5WUiVHjrVq5MhRLAdtjFoN2vzTV4q2
      aIsC/av/tIAL5I+iaFEkQFD0jyIFAhhFC1dKA9iCHTe2oViyosdKKy1fy/eQHM5wyHk/7uv0
      D2rXWnOHu5dLLjmc8wGI5XLOnDkc3t/cc8/5nXMVIYRAkjqUetYNkKSzdOIBYNv2SVcpSadG
      d1PYalZZXFojnEihmRX2qyYTo/3cWV5jZHySkF/HcRxkr0pqF4qbawAhBNntDfJli+mJEZbn
      57A1nbGJcdZXt5i8PIbjOKiq7FlJ7cHVGcBxbAKhCObuFhurd+gaGqOa28KyLAQKiqIA3PtX
      ks47Vx/VjtlkaztDT38fluWQ3doiNTTI5toGQ8ODp9VGSTo1rrpAj8K2bTRNO8kqJenUyM66
      1NFkAEgdTQaA1NFkAEgdTQaA1NFczQMU81nS29sEI92U9nbQAzHCusl+uc7EzHUiflfVSdKZ
      czUM6pgNbt78iEiyh2AgSbOcw0RhdCBBrqQw0BvDcRw5ESa1DVcBUNjNsl8uUqtZmKaBqnsJ
      aDaGZdE3NkMy4pPzAFJbcRUAtm3RbBr4AwEs00DVPKgIDMvG7/N+XkYGgNQ+5Eyw1NHkKJDU
      0WQASB1NBoDU0WQASB1NBoDU0WQASB3NZSrEDuntDL5AjGIhj+YNEg8o7JdrTFx5mmhApkJI
      7cXVERvtSuHL7RKNhcnv7oBuYzp+ZiZHye2XCHljclcIqa24CoDl2x9TU0JEzDq6Nwi2jbAb
      LC6tMzhx7d4EmJwIk9qFu1QIy8S0bHSPB+HYKKqGpiiYto3X4zkoI2eCpTYiUyGkjiZHgaSO
      JgNA6mgyAKSOJgNA6mgyAKSO5ioAhG2ytbWNaTtUSwX2CmUso0F2d/+02idJp8rVMGipkMc0
      G+zs1qjXKgyNjlHIbhHw6/i7RuiJB+QwqNRWXM0EB3xe1jezDPbFWV43yWym8Qf89KQS5CoN
      7IhXpkJIbcVVAGysr4OiYCsB/FoWxRcm7IP55S0mrz6Fph30qOQZQGoXciZY6mhyFEjqaDIA
      pI4mA0DqaDIApI4mA0DqaDIApI7mKgCqpT1mb9+mUGlg1ossr2co5neYnb+DLee+pDbkah7A
      NA0alT2yRbAa+1hCw6MK+lNRilaIge6wvFO81FZcHam14h47RZP+hE6xUiO9lcFxBCCQt8SQ
      2pGrVIh6o4FRq1OPJ3jh+efI7+2jY5HeLTM1OYCqgBBCngGktiFTIaSOJj+qpY4mA0DqaDIA
      pI4mA0DqaDIApI4mA0DqaMe4P0CWaFcf9VIWQ3hJBFV2CxUmZ64T9Mp4ktqLq3kAIQSba4vo
      4T4iXov17X10xWG4P0GuojLQc3B/AEWR88JSe3B1BthaWcD0REkG4Pb8OlPTU2ytrbCT3SWQ
      HJX3B5DajqszQKVUoFCqEInFqBaLqN4A3fEQ++U6qWQCkDPBUnuRqRBSR5NXrVJHkwEgdTQZ
      AFJHkzf2lR7qIuz12mpoXgaA9FBCCGzbPutmHJuqqi0HZmQXSOpox0iF2CGa6KWY30YPxgnr
      FruFKpNXrxOSqRBSm3GdCpFeWcBWPei+LprlHBYKo/0JchVFpkJcYI7jnHUTjk1RlJbHpKsA
      2FiaxfBE6Y0HWEvncBwHr2rj9WiEe8ZJxfxyIuwCchznvmsAIQTf+c53eP311/nwww958cUX
      H6meUqmEbdskEgdZA6urq9RqNa5evXrk89566y1efvllAoHAoceEEGxsbDAyMtLy+UddA7jq
      AiV7BihWaqCHGBlU0P1hPKpDqdKgK+Z3U5XU5srlMjdv3mRtbQ0hBPV6nZGREcbHx3njjTcw
      DIO+vj76+vowDIPl5WW6u7vJ5XJMT0+Tz+eJxWIsLy+zsLDA0NAQ+/v79Pf3Mzc3x8svv0w8
      Hud73/se6XSa7u5uurq6mJ2dJZFIUCqVuH79Oh6PhzfffJNvfvOb3Lp1C1VVee211x55ZxJX
      nfZgJEZ/fz/hoI9ILEHA50H3+OhKxI71JkrtKxaLUa/XMQyDdDrNiy++yPz8PEIIQqEQgUCA
      y5cvs729zdbWFplMhlQqxZUrV1hcXOTGjRvEYjGmpqao1+t88sknhEIhNE0jmUxSKBSoVCr4
      /X6GhoZoNBoYhkGpVOLWrVtEIhFM0ySZTDI6OkqtVmN4eJhGo+FqxEoOg0rHMjU1xdjYGIZh
      MDExwXvvvceLL76IpmmMjY1hmibRaJShoSG2t7eZmppieHiYDz74gBs3bvDuu+8yODhIMplk
      amqKZDJJOp0mGAzi8/nw+/3EYjH8fj+KojA5Ocn8/DxDQ0P09fWRzWYJh8OoqkoikSCZTDI3
      N8fo6Ci6/uiHtUyGkx7ql68B2o2cB5CkFmQXSHpiqtUqmUwGwzBIJpPkcjls2+bq1av8/Oc/
      59q1a5TLZUqlEqqqMjMzc+ptOhQAn3z8EfnMOlp8lF/78rOn3gCpc2iaxs2bNwkGg+RyOTKZ
      DLqu4/P5mJ2dBWBoaIhbt27h8XieSAAc6gI5zTLBnnG6o6EHPsE0TUDQbNQxTAvHtqg3mqfd
      TukC8Pl82LZNIBCgWCwSi8W4fPky77zzDteuXWNxcZH+/v4n2qb7AsCsFfh49g5GZY9MvnCo
      cLWY5533P8Ksl/hsdpFPP5vlzsIcK3fmyJdlEEhHUxSF3t5eenp68Pl8TE1NMTk5eW+UJxwO
      4/F46Ovro6en58m06YujQI5tMnv7MxTdT//gMIkHnAVm52aZHB/hw48/Q/cFiQT8DA8kyJUU
      BnplKsRFdVFTIe67BlA1D3u7GfRAnEA4figAivkdtre3iYRD6LoXVVHxqDZzi+tMzFyXu0Jc
      UI7jtPWaAFepED5NZS2dxh9NHSocS/byyq/3AjA01Dr3QpLaxaEA8Pj8JHuDeBzZp5cuvsMB
      4PGyeusjgs+/chbtkc4hRVFO7bZXdxPpAoHAqV07tqpXGLXDAaBrCoOjU4yN9J1KY6T2oyjK
      iV/X3T3wDcMgGAyiadoTHzwRRuXwPICu6zSrJdbSmSfaGKkzCCGoVqsUCgU0TSMej+P1es9s
      5PDQGSASizN9vZtUV+Is2iNdUEIIarXavU/8UOjBE61P2qEAuLOaRgiLXCbESzd+9SzaJF0g
      d7s6zWaTYDBIMBh8Yp/2wqggjGrrx2v5wwEwMznBX938jGd+5dqhJzi2RSa7y0BfL7mdTZr4
      6QppbO+WGR8bQZXzX9LnhBA0Gg0ajQbBYJB4PP5EuznCsah995/g7K+A0uICXojDAeAPx3nh
      uWdw9MMXPY1ala3MDql4kMXlNKMTk6ynM/R0hcjkKwx0h0/8F5HaixCCZrNJo9HA7/ffW/97
      Bg1B1Pfw/8a/R+t/pmWxQwHw/rs/oWz76Y7HSL7wpfseC0ZihAJeQBDv7qO6n8V2xEH6gy4/
      /juZ4zhUqwfdjVAohN9/PtaIK8EEaqS35eP3BYAQgt7BMV4Yu8TK6vqhwsX8Do7tsFcTpKI6
      jqefmF9lO19mrO98XNScF3ZuHvPT74JzxEoqVcfzzN9B67r05Bp2wu4e+HfXArdbGsx9AWBW
      8rz9lz9jaXmdK08/f6hwLNlLLHk3muL3fj4eip5qI9uRtfQXWGs/Qx/+cusyy3+BGhtqywC4
      e+A7jkM4HG67A/+u+wLAG+nm2WszTD7zZSJ+uVjs8Qi03mv4v/bvWpaovfkvnmB7ToYQgnK5
      fO/Ad7MA3c1rPKrHvbA+PBNMkz/6g//Cq3/zdb50beKxKpcuDsdxqFQq2LZNJBI5lQP/LlHc
      oP6n/xJhHZGPpqh4nvoWamz4wY87Fhi1h77Wod+i0nT45m9/g3yx+MgNli6uu10d27Yf6RPf
      KWzgFNOtCwgH46M/QdTyrYuYddTYML7n/37LMvb6O1iLPzyyLUp8GDU2dGSZQ79NqquLpbUN
      RqeePvKJ0sXmOA61Wg3btgkGg3g8nkd6Xv3P/hWitg+6r2UZxR/D+/w/BLX1dYOWuoKaGG35
      uD7yq/he+teP1KajHAqAarWMaZoYhvXYlUvt527KgmmahEKhRz7w7z3fMvB//ffRx146pRae
      rEMBUCiWCIZCfPizH5Hq/tsMpuS2h+3Oqe9jvv/HCMc8opRCMzaFUdgiYO/j13VswO12WKK+
      9xgtffLumyMuF/Z4/sYr+FWHl155jVT8/rH9ajHP2+/+FQC5zWXeuznLyuIsH334IaW6PGOc
      V05uHuOT/wW2+cAvs1mnEplGr20TcfbQFdGy7MO+PNf+FmrP6W9nclLuOwPMzc8x2p/ADPSQ
      y6SZGh+8r3AoliQZz2I1q+TKFn5NYAkvM1M95PZLhLyxtl8/elIcx0E4Astq/cEgxMEs+lFl
      ToJtOyj+KPpf/zfwgGFDHTi88fjxOYBzyr/TSbkvAGYmx/nxzz/ja7/+FTLZw6NApf0cm5ub
      xGNx/B6V1Z0CQz0R5hdLjEw+JRfFf4GtqjiqcuSoifH5SqvTHFIEQFMxUdB0DaVVYliHuu+d
      D3f18ze+cbAx0fjI4dSGcKyLr778VRRVRVMUxi5NoCBwHCEPeqktufroUVWNLy4NPfhWQR77
      UruS50Opo8mEnzNm3fkRTmmr5eOK7sX7pd9D8cuEw9MgzwBnyPv076B2Tx7krbT4Mm7+T+zs
      7Fk39cKSZ4AzpF/6Kvqlrx5Zxlr+CdB6WFk4NtadP0fUWk9AOYW1Y7WvE8gAaHOilqfxg3+L
      mpxE0bwty3mmXwPkqr1fJgOg3QkbVA+B3/5D1FD3Wbem7bgKgGoxz4e3l7nxwrPcWVig3BQk
      girFSp1LV54mFnSXOCU9GqeYxt5dfOBjorbLUV0k6WiuAiAUS9KdyKJqOslEDLUBttFgZqqX
      XKFM2CdTIe56lFSIR6HER2j+9D8dXSbYhaN62yb94DxxFQDFfJaN9Q2ikRBzc0uMTUyC02B2
      YYWx6adlKsQXPEoqxKPQvvXfDro5R1E0lCNy66XWXP11ol0pXn31VQAGBu4uRTtImJN3hTkd
      Bwe2PLhPi6sAkAe5dNHIiTCpo3XcMKizv4pTzR1ZRvFF0VLTT6hF0lnqqAAQtkHtjX8GVhNa
      TRoJB9EoEHz9v4Pn+Nv7HbXrgXR+dFQA4DhgGfi/8R/QBp57YBFhlKn9yevU3vinj/liCt5n
      f/cx65BOW2cFwF2qjqI9eNJOCXQR+kdvgf24NwlUwCv3Sz3vXAdAqVQiGo2yl8vgCSXwaza5
      /SoDfYdvq9quFN135L420sXhahSoWsxza24Rs14kW2iwvrLE0tIKGEV29h++DZ0knTeuUyG6
      olksyyQcjtEsm1hAIhFnt9LEtn3nOxXCthAIHPv0d2KQ2oPLVIgd9vJ7dCVTlPIbeEIJorrF
      wso2UzPX0LSDE8p5TYUQQkdBQdWewE4MUltwdRTEkr3cuHFwf4De1C9Sb/tbbND7pBmfvoG9
      /OP7fqYNPof3iE1Wpc52oWaCrYXvgwLqwLOoA8+CL4z52Ztn3SzpHLtw/QBt5Ct4n/m7AJh3
      foSxc/uMWySdZ20TAE5hHXPxh3DEBfZRuytI0oO0TQCYn72JOftnaH3XW5bRUtNogw+e4ZWk
      B2mbAADQhr9M4Ou/f9bNkC6QC3URLEluHesMIByLxYUFPKE4cb/C1m6Z6ekpdBlOUps5VgBY
      Ro26IaibBUyvzlh/lEyuyEAqguM4J91G4GAvfSEEtv3o9ywRQiD4wnMcGxAIx3FVj3RxHSsA
      bNPA4w9hN8rYjopl2SiqiqIo975OnKKgKO6WZSqfbwR17zmKcvDT02qj1HaOFQC+UBy/ksfT
      3Us8oLKdLzMxEbl3gKrqyfeFFEDgrm5bOQiCu88Rd28OcUptlNrPsQJAUXUuTf5iyWAkcX53
      JBPNEubtPz343jYRVv2MWySdJ201DOqWlryMGh/B+OR//+JnfddRE2Nn1yjpXLnQAaAmRgn+
      zh+fdTOkc0x2hKWOJgNA6mgyAKSOJgNA6mjHToWYn50lEE+hGWV2i1Umr14n5D2fSyElqZVj
      BUCjske+UCemlvBpKlcuD5PbLeLvPb37AzhCIIRczC6drGMFgMcXIhQJgm1iC8HmVoZo78Sp
      3h/AVhQcRS5ml07WsY4m3RdiamIUoXrx6wrlepN49Pj7aErSWTn2x2kwFLn3fdzT+u6EknSe
      yVEgqaPJAJA6mgwAqaPJAJA6mgwAqaOdi0F1p7RJ8+0/AKf1JJezt4x6xJ5AknQcxw6AvZ11
      VnNNUkFBvlTj8sx1wr7jTYAp3jBqz5XPF60/mNozgz720nGbK0kPpIhj5C3YZoOltS1sy0JX
      VYYHEuRKCgOfp0LIBedSuzj2rhBms0Y6s8dofxcb6W0SA5OnmgohSafhWGcAAITAtCxUBaoN
      g2j44IZwtm3LAJDaghDiMQKgBRkA0nngOII/euM9lrb2W5YR4pyMAknSSXMcwa3lLK88N85I
      b6xlORkA0oX21HgPT13qafm4DACpLVm2Q8NoPW9k24+2MEsGgNSW/uub7/PnHyw/tFzQ7zny
      cRkA0rnTNC1+enMNw2o9MTq/scvf+/ozvPqlSy3L6JpKwHf0IX7MABDUqhXQvPh09b5hUKmz
      za/vktmrPlYdW/kyP3hvibH+eMsyvYkwz17uJRryPdZrHSsAHNsin99jd69E0KegKmAMTNId
      fbzGSO3vD7/7HkKIh3Y9HuZ3f+MpfvNXJk6oVa0dKwBUTUdxTLp7+2iUi5+nQlSxQ/qp7Qoh
      tQfbcfi933qWvzbZ99h1PYkdQI4VAGa9xNpmjr5BPz7dYe7OBpdnrstUCJfe/mSdt2+tH1nG
      69H4B994lq5I4Nivs1+u8z++f5Omefp3xdkvN9A0rW127zjetiiBGDdufOXe/0dOrDmdJZUI
      MjmUPLLMd39ym689f+nIAKg2TGy79a2p5tfzvD+/zbd+7QpwuomKV8dSTA8f/TudJzIV4pz7
      x//x/3J9vIeervADH3cchx++v3zkmLgQMJiK8J//+W/KTN1fIgPgnPs/P51lNVM4skwi7Oe3
      vjLFUcd2NOjD722PbsmTJANA6miPvSa4Xi6wtLqBIwd+pDb02AGwlt4iERBk8pWTaI8kPVGP
      HQCa5sHv9+PIXZulNvTYAZCIBlhK5+lJtc65lqTz6sQugu9WIy+CpXZyogHgOM6hnymK0vLf
      RynrOA6qqt73nIfV+yj1P269D2vvab0Pbup1097TfB9Oor5W7XXzHj7odU5sYFhRlFP55FcU
      5dAfXtYr6z2x+k56HkCS2on27W9/+9tn3Ygvym6usld3oFFkcXkFzeNnfeUO5YZNs5xndX2L
      eLIbTXU3pZ/PbpDda6I5NRbuLOELxdhcXWS/YmDXiyyvbRJLdKFr7j5dCvkdNnNF/KrF/MId
      VH+Y4s4qZduLUd5laWWNSKIbj8t685k02WID1aqyeGcZTzDK5uoi2f0KdrPMyuoG8e4Uusv3
      obC7xVaugk8xmFtcQvcH2d5YJbNbRLHrLK2sE4l34dHdtbe0n2M9s0fYI5ibX0R4ggR0h8/m
      l/FicWd5hWCsC5/+6L0EIQQbi59i+roo59KsrG+SSIT55OPbCM3DXibNVq5AdzLhMsVDkF5Z
      pC58529z3HA4TL1eo1wuoymC3HYaX7SfSj7LbqnGcE+I9E7Rdb2haIRGpcZWJsuVmWlWZz+A
      YDe2UWV3v8R4f4yNnT3X9fpDMYx6icx2lkvTU2ytrREJB6nWm+zki1yZ6GN5NeO63mAkSqNe
      Zieb5/LkOOn1TcYnJjDrNXKFCpdHEqys5923NxzBqNXZyuwwOT3N5vo68WiEZrNOdrfA5dFe
      1jfdt9cbiGA1K2xvZRibniGzscra6jq247CT22P68hBrq1suaxXEw15KDYd8scp4f5SlhVUa
      jgKOScVQ8Zk1KkckAraqNxoLUys3zl8A+HwHi2oqtSZDwwMILYjazFNqmAz2JllcSRPwuV9s
      4fcf1Ds2OsLi3CyaP4LZbGJZFkP9vSwsreHzur/Vk99/cG+04dFh1hbnEboX/+e/w+hQH7Pz
      S/gD7u+f5vMdPGdkZIilxQVUj87c7ALTV2cY6U8xv7hGIOB+AdLd92F0dJSVxTnQvARjCRTb
      YHCgj4XFFbw+9+29+z4MjY2yeWcO27EplmvsbKXp6etlfv4OHpf1KoqKz3vwtx7s62ZheR1/
      rIfnn5lhN7tLKuZlc7eAx3WCn4rPd/C3PmfZUQ4b6S2aDYvRkRG2tzOMjoyS3Vzj2rVriEaB
      7oFx+rrcL7/cWEljWib1ZhTNF2Hq0jj5TBriAzjCIN47wlAq6rJWweb6CpZpUWmYaJ4AM5fG
      WFtawHBUjGA3wdgAl4a6XNebXl/DrDeoGzaeQJyx0X6W5iusrW3QHfcTTY0w0ht5eFW/ZHNt
      A9OqU2kYqN4gV8bG2E6vEk/1oyIIdfUxNuA+nXk7vYplWpRrTdC8XH1qBr9Ho1gs4lFs/JEU
      l0Zbb0/yII5tspatYumb2Ikgid5xRnojrKwsMzx+iWYxx+WrV/G5vSh2LNbTOZq2Ji+Cpc52
      7rpAkvQkyQCQOto5uwaQOo0QNk3DRlcBVXc9DP245BlAOluOxfe//wP+8if/j1K1wkc3P8Ew
      mnxy61NqlSKrq6tsZ3b4+NZt7FNYdCLPANKZUjQfV4fDLNXifPTjtzA9Xsp1m93lD8hupVkt
      wlO9OjU1hGEJAt6TXdMszwDSmUt1J+np62NwaAg9mKInYCD8UQK+AFevXWN0fJxSNk2pYZ74
      a8thUKmjyTOA1NH+P5+Ma6pkdvNLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medal Count' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAMlklEQVR4nO3d6Y8b9R3H8c9cPvc+svZeIUAR2XIoCmehpZWCgKpCLaAK+qRVHyD6D1Cp
      fYTUPuyDPmilPinlQaU8aKWqT1ogBArhzrKBsEk2cXaz3iNmL3vttT3j8fx+fRASCDl2vbE9
      3vl9XlKUaNfH19K+MzP2b2Y1KaUEkaJ0vwcg8hMDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUx
      AFIaAyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMg
      pTEAUhoDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMgpTEAUhoDIKUxAFIa
      AyClMQBSGgMgpTEAUhoDIKUxAFIaAyClMQBSGgMgpZl+D0AkpYQQAsLz4Hke4DgwhYAWCkGz
      rAt/a1pDnpsBUFNIKVF1XRQLBRQ3LvwpF4sobhRQcWxIISGlhJQCHWdnkBj/FNB1wDCgmSaM
      rk6YySSsRALW0BDMZALW4BD0eOyG5mIA1BBSSgjPQ349h+zKMrIry8jncqhW3c3v6wlI96vb
      SQAin4ebnkP5a7fT29oQunkPwmNjiOzdi9DNe6BZVk1zalJKWdM9iK5DSom15SVkFuawnMnA
      rTg1P0ZnagaJjz+p+X56Rwdi996D+CPfQ+jWW6Hpmx/iMgCqC7tUwvzsDM7Pp2GXSjf0WNsN
      4OvMgV2IPfww2g8cgNHddc3bMQDaNiklShsbSE+ncH4+Da9arcvj1iOAi7RYFPGHv4v2xx+D
      NZi88vsMgGolpUS5VETqxCSWM4sQQtT18esZwEWaZSH2nQfR+cwzMPv7vvo6A6BaeJ6Hc2em
      MHv2TN3+x/+mRgRwkd7Who4nf4T2J5648BYrA6CtkFJi5YsMTh0/dsP7+JtpZAAXWcPD6P7F
      zxkAba7qujg9eRwLszNNeb5mBAAAMAx+DkDXdvEg9/j4Ryis5/wep/48jwHQ1UkpkZmfw8nP
      Jhq2r98KGABdQQqBmTNTmJ46iaDvITMAuowQAmdOfI702TN+j9IUDIAuEUJgcuIoMvNzfo/S
      NDwfgACo+cMPMADChQPe1InPlfvhBxiA8qSUSJ9NYVaRff5vYgCKW1pcwOnJz/wewzcMQGHF
      jQJOfNqET1xbGN8F2qEqlQoOHjyIxx9/HAsLCzhz5gwOHDiAzs5OvPzyy3jqqacwMTGBlZUV
      7N27FzMzM+jr68NDDz0EAPCqVUxOjKPqbn6GVpBxC7BDhUIh7Nu3D0IIJJNJFAoFhMNhGIaB
      /fv3QwgB0zTx4IMPIpPJwLbtSx9qSSmROnUC62urPr8K/3ELsEPZto1jx45hcHAQXV1d6Onp
      weLiIvr6+jAxMYF8Po9SqYT3338fiUQCvb29KH25ijO7soy56ZTPr6A1cDXoDiWEgOM40HUd
      uq5DCIFMJoNEIgEhBHRdh2ma8DwPlmXBcRyEQiEAEh+9/SYK6+t+v4RratpqUHALsGPpuo5o
      NHrZ13bv3n3F7QzDAABEIhFIKTE3M93SP/zNxmMAhTi2jempk36P0VIYgELOpabgVip+j9FS
      GIAi7HIJi+lZv8doOQxAEfMz04E+sWW7GIAC3EoFC+lzfo/RkhiAAs7PzaLi1H6JQhUwgICT
      UiKzMO/3GC2LAQRcsVDAenbN7zFaFgMIuMyCeie51IIBBJgQAl8scvfnehhAgJWLRZQ2Nvwe
      o6UxgADLri77PULLYwABll1Z8XuElscAAkp4HnI84WVTDCCgbLsMxy5vfkPFMYCAKheLgb+u
      Zz0wgIAqFfnuz1YwgIAqFgp+j7AjMICA4hZgaxhAQHH159YwgICqVtW+4NVWMYCA8qqe3yPs
      CAwggIQQ8Dye/rgVDCCAhBDATv0MQEpE9BVAq+9vn78WXhgrgHRdBzTN7zFqogsHPcUTGMiP
      ow1zEHeGYC8OoLLaCcjG/T/NAAJI13UYhrEzrgIhPXSVz2J09XXE3KVLXzaiFcRunkM4sYxy
      ehDVfBxA/aNmAAFlmBbQym+FSomou4yRtTfQXZqChit32TQNMOM22m6fhpvtQDmdhHBCqGcI
      DCCgTNPwe4RrMr0ikrn3kMx/AF1uvpXSNCDUk4fVVYB9vh/2Yj8g6vP6GEBAhSPRlrsIriZc
      9G98iuHsYYS8Yu331yWiQ0sI9WVRnkvAXesC5I1tDRhAQMXa2oAv/J7iS1Kiwz6HkbVDaHdu
      /BxlI+wifsscvIFVlGYH4RWj2O5uEQMIqFi8ze8RACkRrmYxnH0LfRufXXU/f7s0DTDbS2gf
      S6Gy2o3yXALStWp+HAYQUPG2dl+f3/BsJPIfYjD3DgzZuGUZmg6E+7OwutdhL+6Ck+mr6W1T
      BhBQ0XgcmqY1/aQYTXroKU5idO0QwtXmHYPopkB0JINwfxbldBJurh1b2S1iAAEVjkQRicZQ
      LtV+sLktUiLuLGI0ewgd5ekGvGO/OU0DjKiD+G3nUF1vQymdhChHcL0QGEBA6bqOzp7epgRg
      VfMYyr2NXflPoMP/RXiaBlhdG+joSMFZ6oE9PwDpXf1HnQEEWE9fHzLz6YY9vi4q2JUfx3Du
      LZjCbtjzbJemS0QSqwj15lCeS6Cy0n3F8QEDCLDu3v7GPLD00FVKYXTt0GXLF1qVbnmI7VlA
      eGD1imUVDCDAorEY2jo6sZGv08GolIi6SxhZO3zN5Qut6urLKsIMIMg0XcfA4FBdAjC9EpK5
      d7e8fKFVXVpW0VmAnennL8oOuuJGAe+98dq276+JKvo3jmFk7TAs0aR3lJqIW4CAi8Xb0NHV
      jXwuW9sdpUCHPYvRtdcQdxZ9eVuzGRhAwGmahsHRm2oKIOyuYTj7Jvo2PoeG5pyZ5RcGoIDE
      8Aimp05seqkUQ9hIrH+IwdwRGFKNX6jNYwBFzJw+hdTJyat+79LyhdVDCHuttYS60bgFUMTg
      7ptwLnUaVfdrC9OkRNxZwOja6+iwzwV2P/96GIAiwuEIBkd2Iz2dAgCEqnkM5t7Grvw49IDv
      518PA1DInttux9L8DLqW3sFw7n8tuXyh2RiAQkLhMO4dNeCeetXvUVoGL4ylmPDeH0IfuMPv
      MVoGA1CMphuI/OA3gM6NP8AAlGQk70Lonl/6PUZLYACKCt3/AoyR+/0ew3cMQFGaGULksd9B
      i/X6PYqvGIDC9PYkIo++pPTxAANQnHnz9xF+5MUL1xdRkJqvmi5j3f0cQvc97/cYvmAABE3T
      EHrgV7Dufs7vUZqOARCAC58PhB95EdZdP/V7lKbicmi6jJQSlXf/iMrRvwIy+IvkGABdQUoB
      d+LvcN75AyB27gnwW8EA6KqklKimDsF54yXIcs7vcRqGAdB1iewsyq/+FuL8Mb9HaQgGQJuS
      VQeVD/6MytG/AdL/a3/WjW4yANoaKSW8xU/gHP49xMppv8e5YXriTkQe+TUDoNrIagXuZwfh
      fPgXwN55J9BrsV6EHngB1h1PQzNCDIC2RxSXUXnvT3BP/hvwdsAlVMworDueQui+56HHv1oA
      yABo26SUkBsZuJ8ehHv8n5B2671bpMV6YH37J7Du/hn09oErv88AqB5EaRXu8X+gOvUfiLVp
      fz9E0wzovbfAGnsS1tiPoUW7rn1TBkD1JKWAWJ6CO/kvVE//F7K02rTn1toGYI09CfNbj0Lv
      vx3aFla4MgBqGCk8iKWT8OY/RnX+KETmOGR5rW6Pr8X6YCTvgjF8L4zhe6H33QqtxnMbGAA1
      hZQSqNoQ6/MQazMQ2RmIXBoiew6yuAIIF/AqkJ534d+6Ac0IAboFmGHo8T7o3TdB6xqF3r0H
      etcI9O7dgBGGpm3/mnYMgHwnpbyw5shzAK8KKVxAM6CZYcCwAN26oR/y62EApDR1TwalprBt
      G6+88gqeffZZTE1N4dSpU3j66acBAEeOHIHjOIjH49B1HfF4HJlMBkNDQ9i/f39T5uMJMdRQ
      kUgE+/btg5QSyWQSruvCNE3EYjFEo1GEQiGkUimsrq6iUCggGo0inW7cr3b9Jm4BqKEKhQLG
      x8dh2zYMw0A0GsXi4iIikQjK5TIcx8Hw8DBs28bw8DBSqRTGxsaaNh+PAajp5ufnkUwmYRiG
      36MwAFIbjwFIaQyAlMYASGkMgJTGAEhpDICUxgBIaQyAlMYASGkMgJTGAEhpDICUxgBIaQyA
      lMYASGkMgJTGAEhpDICUxgBIaQyAlMYASGkMgJTGAEhpDICUxgBIaQyAlMYASGkMgJTGAEhp
      DICUxgBIaQyAlMYASGkMgJTGAEhpDICUxgBIaQyAlMYASGkMgJT2f54p54kUshppAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Olympic Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Olympic hosted cities' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='65' name='Sheet 6' width='184'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sport with most medals' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAd8ElEQVR4nO2dyW8kWX7fPxGREbnvG/elWCx2dVd3dfVSPd09I1uSBUOY0dwEyfACQ7AB
      w/DBMHzx2X+A4YMPPvrggYUBBMuyZNmegTWaHswi9XTtLC7FfSczk7lvsfjAarJYJCOK1ZlM
      suJ9gMF0vPox3i/yxTfe/nuSZVkWAoFLkXvtgEDQS4QABK5GCOANpVUp8NMvvmBhdetMm2Zx
      jccLOwAszz7kq4dPOas9bJktcrliFzztLZ5eOyDoDtvLTymZAT7pT/KLn/6EhuQj6DHRkfn4
      7l08ssSjJ0tMffgpALNPZ7j7W9/lFz/5MS3TpH9wlOWVNVL9WTZmZgglA9x/sM0//xf/GL/6
      5nw335wnERwjO/E+H16L8Wf//U/45b2nKB4PPuosbpdQZAnLMqi2IagqgMUn3/lN/uf/+FP2
      cmUmJ7L89f/5vwy/8wnL84+otTU+//RDro1P4PNIvX60jiJqgDeUVr3M8voOd7/993hnd5mW
      J0LIm+DzjIluWDR2FwhlryE9f593tjZ474OPWbj3Cxa2WvyDP/qnPHnwgLuf/TaNUg1FTTCY
      1WjoFn71zRGB1K1h0Gazidfr7catBR2gWirhDUfwSMfLqpDLEU0mXdM06NpzNpvNbt26Z5T2
      c2zt7GK+ATMnwcjByw/Hyyp+1V9+y6RcrgIWpVIRp8/7lX7Wi2Z5ZRWf18ub0wB4AzHq/OJv
      7mGYOj//2c9om/bmQgDnoFmvsLOXP3OoUHA56EuGmZ2eJdE/7GgrBHAOUn1D3JgYQxZVwOVF
      kklk+qm3dAaS4cNO/pnm3eoEF4tF0Qm+IlQqFUKhUK/d6AldHQaVnOQnuBRIkuTasuqaACRJ
      EjXAFcHNQ9aiDyBwNUIAAlcjBCBwNUIAAlcjBCBwNWI1qOCQ7doGf7v3M8Jq9DAt39zjdwa/
      T1B9M+cJhAAEhxiWwY3oLSajNw/Tfr33cywcFtRcYUQTSOBqhAAErkY0gQTHaBg1yu2jze9N
      o9FDb7qPEIDgkKgWY6u+zlxx+jDNp/jxKr4eetVdhAAEhwTVMB+kvtVrNy4U0QcQuBohAIGr
      EQIQuBohAIGrOZcAGtUiT58+pdpoMPd0muX1bcqFPeYXVzD0NvMzTynXW93yVSDoOOcaBbJk
      leH+GGtLa+zkitzsG2Jjc41kNMD046f0T06yvrzE1NQklmUhjh64Gri5rM4lgHa9zGahweSN
      CW5IEzx88Aif34uqquhtA03zIsvS4Q9qmm/uGpI3CTeX1bkEUCqVMZptcvk8ue0tIskUIY/B
      2l6Vt9+bYm76IdnhCWRZRpZlFEXplt+CDuLmsupaWJRSqUQkEunGrQUdxs1lJUaBBK5GCEDg
      aoQABK5GCEDgaoQABK5GCEDgaoQABK5GCEDgasSOMEH3sU5bZiHheHrFBSAEIOg+D/8rBPuO
      ro0WBJIw1Pvtl0IAgu4TzMLE7xxdN0uw87h3/ryA6AMIXI0QgMDViCaQoPu061Baf+G62jtf
      XkIIQNB90jehUTielrzRG19eQghA0H0uyct+GqIPIHA1QgACVyMEIHA1QgACVyMEIHA1QgAC
      V3OuYdBibpu1zR0ygyPkNlfxRVL4pSa7+3UmxgeZn18kMzhGNunOEBuCq8e5BBCOp8m0auS3
      toikh6kWdmgDI9koTx8/48YHt9l4Nk86HsI0TXRd75Lbgk5iGIZry+pcAtjbXKWtRhkdNNnY
      r9PWdSQs6vU6Pp+HarVG2+AwMpzHI+bZrgKKori2rM7VB5AVD6XcNjX8+KUG/cOjjA0PUMfH
      1Ds3qe5uMj5xrVu+CgQdR4RGFLi6rMQokMDVCAEIXI0QgMDVCAEIXI0QgMDVCAEIXI0QgMDV
      CAEIXI0QgMDVnFgA0mo10VtN8PgJ+NRe+CQQXBgnBHDvqy/J7+0QiA/yG5993AufBIIL44QA
      MvEw0dQAQX+gF/4Irgilx0vUlraOpamxEMnPb/XIo9fjhAD29/cptEpkEkmGBjK98ElwBagt
      b5H9+x+DfBTifPsvftlDj16PE51gSZZZmL5PudkLdwRXBQlAlpBkGUmWL0Ws/9fhmABMvUWl
      afDd730fD61e+SQQXBjHBGC0ahQKRRaXN7g2cb1XPgmuEJZl0aUtJRfCsT6AGogxnI2Rb7bZ
      Wlsl8fZUr/wSXHI8kSDbf/6L402fKyiEE51gC4mF6Xv4PvytXvgjuCIkv/1ux+9pmW2sdvFE
      uqTFkSSl4/nBSwJYnrnP02dreP1RNK+YBBNcLGZ9jVbupyj+4cM0vTKLb/D3kbREV/I8JoDR
      qdvohsmjuRU0l0YJEPQWT+Qd1NiHL6ScdsJkB/N78aJRK7Oynefju3cJhqJdzVgguAwcGwUq
      7+epVCosLi4wv7h86h80m03AolTcp1ypYbRblKs1LMuiXCphmFevIyRwL8dqgEgowNLSEiDR
      H06fMC7v73F/ZonP7kwxM7/M+PgYGyvPsCzw+wPULRm287w1OXYRvgveQIzqAs+n2Q6u62t4
      one6lt8xAXgjaf7hH/w+jx8/wevVThiHYymSsV1QfKTjQZZXVokE/fQnwkzPbXDrkzusz89j
      mqYIjXiFuCyhES01gxS6fazVL0c/w5QCmF3y75gAHvz8f/NX99YZHRvk88nRE8aFvS22t7aJ
      RePU6000rxdN0plb3eL65CBP798nnu4XoRGvGJcnNKIHtIs9T+xYZDhTb7O+tsT9B48Zu/kB
      tyZHXvvGbo42dtVwc1kdE8D+/sFRltFo7OAfv8ECJzf/qFeNq1hW+uJfg3y81rJqedSb3zvX
      fY4Pgxb3+Iv/91PGR8cZHL/BjbHBb+7pOVn7wY/wRIKH12arTfS9CYLXL94XweXFWP8K7bN/
      hSQfzBBblkXri/9w7vscE0Df6CS/cbfMk/k1ZKU3M8GeSJDsd791eN1Y26WVK/XEF8Gbz4n9
      AJs7eT648y6bayu98Ac4aHp9/T+BoJucEMDHH39MoVjjow/f74U/AsGrY+pYRhvLaIOpA+ef
      hD0x9lWs1Hn31tvsbO/gz2Y74eb5sCws03zhUswsC06iDH1E65f/+ViaFDv/qOUxATRLu/zw
      hz9kdHSUkcl3yXTo/b+X+xWlVvFwfs8CwmqEO6lPTthaFmz/r18dJZgm0TuTnXFE8MbgGfsc
      z9jnr2T786UvaLTrx9Kup24wHB89ORP8dz/9gLmVnc55CpRbRb7d99tIzyVgYfGzrR+fatv/
      /c86mrdAML39mN+9+XuH1+VGiYeb908KAKBSb/P++3eIxJMddULihU6taNUILhC/x09/ZODo
      WvUzvzcLnNIJjkWCzMw8ZTu3f3EeCgQ94oQAfP4AkXCAne3djmZkYR1uoLZEFSC4JJxoApX2
      cywvr3Hj9t2OZRJSI3yx9SN4oRscUq/W1Lvg6rJZWucHX/6Xw+uW0WIgcrCy4IQAmq02yVQC
      vd3umAOnjfYIBBfFv/nNf3fmv51oAqmegyUQqnpyP4BA8KZxrAZYWnjGrbvfQdKbLK5u98on
      geDCOD4RVt7ly3sNwkqdYtuPiA0neNM51gSauv0t+qMqciDFtz54p1c+CQQXxolO8Mi1i92S
      JhD0EnFGmMDVCAEIXI0QgMDVCAEIXM25BNCqlXnwZAbL1Jl58ojl9W121ld49GSGRr3CowcP
      2MmXu+WrQNBxzhUNyVI0VNmkVswRTg9TLezQAkYyYaYfzzN55zabz+ZJxYIiMtwV4rJEhusF
      5xKA1+sF6SCSWKPSoK0byJjUG028mod6rY5uWEiShCzLKEp3DjUQdBZFUVxbVucSQGFvC6Nt
      UNZVfFaZ2NAwPlps79d469YwSwuLjF67drjxRUR1uDq4tayORYbrJFcx2phbcXNZiVEggasR
      AhC4GiEAgasRAhC4GiEAgasRAhC4GiEAgasRAhC4GiEAgau5DEcDvh65Wdh5BFroKK28Abf/
      CUjHdW22S2A2jv+97EVWoxfgqOAyc3UFYJkw8BFEX4gJv/CjU01b23+O7Ovn+AHMq/iH/1GX
      nRRcdq6uAM6DrKEmfwPpec1gWRbm5p/02CnBZUD0AQSu5mrXAM0S1PNH13rjbFuB4BSurgBC
      fZCfh8LC8TROWdduttH3v+TF6NQYzQtwUnDZccV+ALO5i6VXj6VJngCyN9Mjjy4Xl6msLpqr
      WwOcA9mbBm+6124ILiGiEyxwNUIAAlcjBCBwNUIAAlfzmp1gi2q5AoqKT1Notg38Pi+1WhV/
      IIjs0hAbnaDaOjk861U8eFwat6fbvJYArFaVJ7MLjI6Nsra0imFahIIhKrqJLKm8dX200366
      hj97/IDxZOrwutJs0heO8E7fgM1fCV6X1xOA7CUR8bG6ukYk6GcwGWZ6doNbn9xhfX4e0zRF
      aMTXJB0M8eHA8OH1bqXMXq3a1d9ShEY8J6bZptXS0TQvqqQzt7LJxPUBnt6/TyzVhyzLyLKM
      x+OKaYaO8vLvJitK139LRVFcW1av9dQeLcDNd47OEBt7/v+JVLYDLgkEF4c7ZX+JKTbqPNvb
      Pbzeb9TwPT+7WdB5hAAuGR8MjmBxtDwrFQyRCoZs/kLwTRACeAmztAEcXx8o+eNIauBC8h+J
      Jy4kH8EBQgAv0fjxv8dz7e8cXlvlLeT0FOrU7/bQK0G3EAJ4CSU1iXb7Dw+vjZ1pzMJS7xwS
      dBUhgNdkfm+WLxZ+glfxHqaVGkX+2af/EkU+Pmtb/su/RM8XXtyOgxIOE/m9712cw4JTEQJ4
      TUr1It8a/ZypzM3DtB/e+wGWZQLHBWAU9on94R/A10tELIvif/vjC/RWcBZCAC9hFldpzx2F
      V7FKa0ihM+Y3pJeOFnJYA/W1rfX1Hwt6jhDAS2gf/RG8uEs0lEGOjZz9B4IrjRDASyh9776y
      rWVZmJb5YoKdMZZpvmDXla3YgnMiBPCaJIIpvlj4K+6v//owraE3DoNvvYinr4/iH//wWFAK
      JZU6YSe4eFwRFUJgj5vLSuwIE7gaIQCBqxF9ABcw+zf/CdNoHpuHsCyTm5/+2946dgkQAnAB
      lqUz9cm/PhYde/ZX/7HHXl0ORBNI4GpEDXBFKbeKLFXmT6S/E7+DfMpQrOB0hACuKLuNbTyS
      h77A4GHaV3u/xIwZJwVgmbQb+0dHRz3vAwg6KADLMllbWSE7NIqmiHUuF0FYjRL3Hk2o+RT/
      qXaJ/o9Ym/nTY2mx7O2u+nZV6JgA8muLeMIp5mfnefvmZKduK+gA6ZHvkB75Tq/duJR0rLHY
      aJpEYxFUEcBMcIXoWA2QGcww/fABqX4RFe4ikCWZB/kvWSjPHqZt1zcQy6zPh1gLJHB1WXVl
      FMg0TQzDoFQqnfg3y7KObyJ5bi/LsqPdeWxPsxP5n25brVZfyc40TSRJOpF+nmcCXvv5u5F/
      VwQgyzKKorzyV+Wswvomtt2455uaP/BKZXXWC/hN8z/PM3U6/wudB9hYX8PUWzRMD9fHj3ZZ
      nXTU4P6XX+FRoKRr3Ll9C58qn2pbzW8xs7pHq14lkc4yOTGGdOo9YWN9HUNv0jA8TF47T/7v
      4Hveuz9ua7C+so4BSJKHgeGBw93Ap+Vf2NsiV6zRPzhEwKseFuRJW5PVxSVM1cdgfx8e5ejf
      X7at7e/wdGmbVqNGPJ3lhs3zL809pW5Aab/A0PgUg9nTYxDpjQo7eznWNve5/cG7eJXTf3uA
      jcU5Cg2DSqlI/9AYI4PZM2wtHt//CkmWKdV13r51m0hAPdVWb1bZ2d1jbbPAe3few+exyX9p
      jnzdoFoq0jc0xugZ+ZcKOfbLBzVdNJEmGjoYMr7QKUOj1aDSllBwnoSRZBlf0IdimDRsIhfL
      soKsKKiKim60be9ptutU2xIeyTl/WVbwBX14DJN6yzjbz6+/Rq/Q9/SoGlgGi/MzrKzv2lhK
      aF6VernA40ePqTTOfi5Zlg+eX/ZgODy/LEmomoYvEKRWrtjarq5skE7FMB16iJIkoagqXn+Q
      ZtX+npIk4wv48KkKlar9MbWrKxuk0wlMhy6qLEl4VBXNH6RZLdtkfup/XqwAWjrcmBjDcAzF
      LdPXl6Ztqrx16y2ivrNjY3pDUaJ+lUgiwY3rE7bv4evkP3XrLWKBs/KX6R/sx+f14vV6HTXQ
      rNdB8ZLJ9jE8YHdqpUW1WiYaiTE0PknQe3ZFrQWjxILaKz1/qq8Ps90mlR1gYmL4TDvTaNM/
      OokXw/EFjGeyKKZOMpVm4vq4rW1ff5a2LjE6cYP+VNA2/76R6/gwHAUYT/cd5n/9+rUz7cLR
      BIl4BK/mRXmhRr3QJlA8GmB2ZpZgNO5gabKzW2J8YgyvT7Nt81XzO5i+CIPxMIpDmy8WeZ5/
      xDn/7b0i49ec8pco724y/WSFUCxMLJ1Es7lrsVShVK5Sq/jIpO0FUKuW2C9UCWU0khHfmZa1
      wi66GmIwGXV8/vXVdfqGR9FU1fYUH483SK04hyGpZBX7e26vrZHoGyagqY5t7s2tPcauXUPz
      +mzL1OMNUC/PUUEl7bG/59b6KvG+YYIO+UsSLC3O0qzLBJNt3ro+BFxgDVArlZE0L4GAH59m
      95oASISCXjY3N6k37at1XzSOXt5na2vXtmF1kL/vIH+vc/7hwEH+NZvmB0AonuLmOxP4A0HH
      r0kqnSKTTROLOwjQkshkR0mmkyTj9jFJfeEoRrXI5taOY8MymYyzvbVJfv/k6NwRBuVyjVAo
      TDgYcNy6H08lyW1vkSsUHSwhGgmyublJpdZwzj94kL8T8WSK/PYme3nn/IdGJkkmQ6TTR7//
      hQkgEAlTLdUZHhmhXrErACiXyvj9fjRNczhvrE2l0iIQ8KGq9q/fQf61V8y/gu/r/GX7hk2j
      VmZ1fYdauWz7Ahp6G1NvMTc7j88h2nOr1aJWybO8kSMcPPvrDzrlSotAwO/4/LVSGdnrxatp
      eDx20/UKPg20YJyAItE0z36qRqWCqaj4vJrjGWblUhmf7+A3ta+pnucfiBP0SDQMm/yrFUzF
      g8/rRbV9pgPWlhZotNqUK/XDtAsTgGm0WF1e5NHDh3h8Z7f/AMKREPuFAs1mE8O2EagSCmk0
      m02KRfsvwEH+SzydnkYLhB3yD1KptRjMhNjds+vY6awur6KbFqau2wpAbzfZ2i0wPnGNSnHf
      Nv9apUytBcPZCPtlu6+lRK1WfqUAK4oqUSrad1K/Zm9ni7mZabYrdfw2TSBfKES7UqbeaNJ2
      6FeFI2H0dot6tUK10bK1ze1ssfBsjt1qE79NE8gXDFHN50kPDFEp2f+m+Z0titUGSBLt1lGt
      fmECkBWNvr40hqVQLeUdrCWKxSK6ruM0UW22W2xu7RCJJ2w7gLKiMTI2StCvUSo5VZcyMi3m
      FjaIJ+y+1h6SyRTDo6Mko2HbF9HrD6FgkUimqDmMlsSSCQzDIhkPUCzVbSwVfLKF4g+jVyrY
      vYJG2yISfbVzBjJ9A7T3y6iaRF23b1g16hVqzTa6zZf6a3K727QshYhtrQaZ/iGG+uPs54u0
      Dfvyj8TCLM7NImv294wl0yQTSUaGB5FeKKkLHQUKhcPUygUkz+nLdo8w8QXCDA4O4rcZAQJQ
      NB/pRIS1lTXnwVWzTd1Q8Hqcxmss2i0dZA+Sw7r5ZqtJMb+HLxbHa2sJ129c49G9rxgen3Cw
      VBjqi/F4scDESNLWstFsUizk0BzyD0TCaLJMW29jOLzUskcjGPZSKNbQHDrBhgEDg4NkkjFb
      O4BkOkutlGO/bCdqQJLY3Nihvz917LCQ02g2Wkiy5LgJSG81qDca7OyVGBzIHKZfmACatQqN
      tsnwyAixqH0TBBSCPoXZ2VnKDuPFsqyg+fwMjQw6dkJN06SY36Vat+/YgkW5UsHr9Tr2AZKp
      JI16nc31DdsvMMDczDy3P/yIpfk5B0uDlY0C700kmFvO2VrG4zE0xWJpYRWnp1pd3aBeb7Kf
      t5uDMNnbzdE3NspA0r5WBUimU6wuzLGyvu1gCaqmEk9mSMQcaiLLolWts53LITl4UK+WQFbR
      HPpAmj+IX5Vo1Eps7x01ly5MAJo/SDIexdB1DOPsiaUDDGpNi6mpKSJB++9qJbeFEkpTz+9h
      LxUwUAgHNAybjt0BMslEBBlo6vZfIOn5iZiKR3F8WbLZNKsryyTTGQdLmXjUz+pWif5M1NZS
      9fkpFWuMjGRtC9MyDQaGR0iEvQRjdlHpJNLZLIpkHTRBHTzN7eUYuz7F6FCfgyVsbue5Npxi
      cWnT1s6yLOLJKK16G8NpHiKVQW/rYDm9U6B4PEiyfGwe4AKbQBZLS8ukMxmiEee2aK1SYmNj
      w3EYNJjsQy9vo4YijjVAJBxA8XiJOw1DYlIuFykWCuRzNrOLfD3lbiHJsq0A6uV9Nnd3Ke5X
      HPs12xur7O7kaCNhmvb1it5qUiqUqTfq2L0Ce8vPaMoyGztFivk923s2qwWKdYtMJo3j5j7L
      YHNjnd2cfSfUsqAvk+DZyg6DA/ZhIRWPF9XvJ5WIoTo4kN/L0Wg02N21fyYARZYwTQu5FwJo
      VEs0mi3WNzZY39xxsJYJBLxYllMLUOfhvYdUqjWq1ZrjF3hvZ49M/wCJuP3Cr0KhRF9mgGAq
      y/Ux+8LSWy2QZIxWy/YF9Idj3Lw5TjSSZXjAvgbIDoyQiUQZv3mTWMi+v+TRvHg1KFabth+A
      UCLO4uPHTNx8h6Dfrla12N7O0aiWWFxYpOUwFesPBA72GDuU1PKzGfKFAqVylbZDH0Rv1WhZ
      KoOD/XhshsHrpSLpkRGCmofxieu29wRoNluoqkKzftRWuLCZYK8/QDGXJxAK0qrbd4LKpTKZ
      bB9N3cBjO2bcpF43saplEkPjjtV1Khnj2dwc0WQf18cGz7RbW15GbunEJido6wbeM9uXbdpy
      kPERL8FQCLuR6Hp5n+X1Tdq6yeqmxnD/2SLY2VilpLepPH1K/9CorQhMQ+fa2++RSYRtPwD+
      aJqP7x7MPsev2S1ZkPFIbcrVJgEV26UQjUoFbyRO1CqjOUxu1qp1vCEv1VIDxaFf5fEGMBsL
      zM5WuPX+u3jPqAXKe7tUAz5qNecmUKlU5trEJKZHxaceDaxc2IYYy7KoViq0W3VqbYnBPrul
      ACZrS8tI3gCZdMpmksOi3T5qInhU1fYlmHnymOzgEJrmJeA/e9isVMhTazRBlonGEvi9Z41E
      VXhwbwvLqjI5dQN/wG+bv95uUq418Wkafpv8z0O7WeXhw6cEwzGuT03YivAsXi4rvd2kWm1Q
      yBcYGBtBs/kIlfdz7BTKZDJZwsGzhWoYOubz2kRWFNvJsFY1z9zKPkMDKcKR8JmToXqzTm6/
      iGmC5vOTjJ/dX3ry6DEhRULJDpKJhA7fqQurAQpbK8xv7mPWG3zw6V1He9M0KO9tofpDZGJn
      TZxJqOqrHyJtGW22NrcIxRK2AojEE7zaTgYf8ZiKQZRcrsBAwG/7Ai7OP6PWBs0jcfPtmzaW
      r4rOyvI64WgERdU6tBlS56u//TWRZBDDTNq+/HAwsqa3Gqyub/L2jbMXoymKB4fJ4iMkiWJh
      D49s4g+H0M4QgMfrJ5t1GlI/YKA/TbFcQ68UqWsa6kUvh473DTPal8Dr87C97dRhkfD5vOzv
      F5E6WD/5A/6DtmrH7ulheGyUsbExhl/YC3AWqXQSU2/gCzuPmb8aEoqioCgKmGaHHsvDrXff
      RsZDvZqn7dAH8Pl8B0PcLadB4FdH9mhoquI4WHAeYskMo2NjjI6MEHmhSXlhNYAkyWQHhskO
      DDs+WLvdotk2GLk2STLWuQOqI5EocguyGfvJpW6xs7PHu++/z8z0DNDfgTtKaJpKvdlkv1ih
      Uwc5+UNRJm9EHcvJMg0q1RqRROYVhnZfHUn2kEgkSGWzqOfY1fY69CSGntOWtmfzC6hWi0az
      xMJqoWP5hiJRasVdHj18wPqW03KMzjM+PsrC3DwDI52KnGFSq9UxkRm7Nvpa7X87nLYf7m8s
      01ID5HN5FhcWOpavrKiE/Aoz00+Yfjr/CtunXp9LGRox5FfZquq8PZJgt9mZzqLRqpEvldEN
      mYHhIRIRp9nozlIvF1ha2wKgXK4QD3eiZvNwfWqqA/d5PUKJJAvTs4xO3qSSdxraflUsSsV9
      SuUakXiS8ZGhrgZ6cU1YlI3ZaYLXxqhs1SiVdjrUCX0zuFxl1WL6yQqRiB+pWSM4NEb0zFG4
      b86lrAG6QWpogCeP59A8Mv6oOKDu8qKiKU2KpTZN3eA9hzU+3xTX1ACCs3FzWYlA8gJX8/8B
      hpqvHh2b+HIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Teams with medals' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WXNUWZqu+WyfZ5e7XPM8gQQSIAYJiCCCjImojJMVWVZmWdZ90/0fTln/
      jy7rvmnrvms7ddoqs6pOVUwZkUkQgBBIAoQkNM+zu3ye3ffUFwICglGEJJeL/VyB+x6+7drv
      mt5vrSWoqqqiofGOoit0ABoahUQTgMY7jSYAjXcaTQAa7zSaADTeaTQBaLzTaALQeKfRBKDx
      TqMJQOOdRhOAxjuNJgCNdxpNABrvNIdSAKqqUow5fsUaN1C0cR9KAUiSVOgQ3gpJklAUpdBh
      vBX5fL7QIbwVhkIHsFdMjtwvupdJURQEQUAQhEKHsmNkWUGvL77y9AAKQGRmbJrajuNY9bAw
      O4GnqgUhucbQ8AQ5zHSe6aXe5wA5wY/f3eb45Q8pt5ueucrGygqyXJw1gcb+cQAlKxNY30B8
      VHiHtjbI5FMMDUxw6tKnfHLpDGZhu72ZWJ1FsQpML4UozhaoRqE5gAJ4ESbcNpnxiWliOT1l
      XgcAs2txus6dRd6cIy9rEtDYOUUiAD1nLl+h3qkw3H+VockNVDnBRiBBJpElnwoRThdnJ0yj
      sBxAARgxGiWS6RyKlCOblTGZIJnKU9vayW8+7Ca0tE5kZZa81UVgbQWnTWB6KaI1gzR2zAHs
      BOs52t7KrRvfc1dRqWg5SYlNYKxvkJVoEkFv4sipXgIb01y42EOF0wJygv47s8hKJYYDKGmN
      g4twGFeFEEWRe/03UYpsFOjxX6IIR0FRFRVBV3yBH1oBGAyGohtPF0URnU6HXq8vdCg7JpfL
      YTabCx3GjtEaDBrvNAewD7A7jA7dQZaLywlWVeVRrVVcNRdsu9g63duVp87cMtXRm7sc0Zux
      7wJYn7xD3/gmVrOJ2tZOuo7Uod/h33tldhpnbRMlFuNLjwn6/ZoTXCQoyWkqAtcKcu99F0Aq
      m6fr/EccKTMw0HedQHUVTjWB2e5Br2RI5MBl1bO5sUleNVJZVYFOTLHhD6K3uan0eSgpr8Bi
      1CPl02xuBpAFC1XV5ZiKMBdFo7AU7o0RBExmMzpBYPJ+H5Es5COrDE6u4J9/yOTCJtGgn3Ay
      x8RwP+uhBJubfvKSwuiDQeJpiXhok2A4TmT1IffmgpoPoLFj9l8A+ST9P37Df/v//gNjRTtl
      9udHPCx2B2I6gWKyYjcbcNhtJBNJ7HYH+qfaS4KqENxcZXVzk9XlgCYAjR2z/51gk4PzH/Si
      C4wTiieRH43CyrJMKhlHlB1YS6p571IN4bn7PJh3cLqpi8oWgZH+O2x4vU8uNT07x8n3PsGS
      nOLHce3119g5+y4Aq8ONYrVQ193L3NgD5tcjVNdUc/enb7HbTLgqy8gmt7h7f5IsJk6cKyG0
      NsHDOT9GZwWldgsJtwejXqC20sfA9R/weByUuOv2+1E0DgGH1ggbHRpAUeRCh7IjVFXdHgAt
      MgMPQFUUhLccBnVlFqmNXNvdgN6QQysAzQneXzQnWEOjCDm0TvDdWzdQ5OJrAiEIRegDP2q+
      7UKN2xb4F0xSbBciejN2WQAq0Y0F7o1OkRYVvJWtnDtzlJf7tXtHPBLRnOAiRNx8iEEM7dv9
      dlUAcibG4Mg83e99RKnNQCqZRgfkUhEWltaxeaupq/SQjIRQdSrhhILPpScaiRHLKFSXlxDY
      9OOsbKDKYyO4voQ/nMZbXU9VqZNEZItkPEEko9Lc0kgmHsZZ4sOoh1AwSInXh74IU3I1Cseu
      9gHSiTDmkmq8FliYmWBlM4IiJhkbm0ZvsbI2PczyVpr54ZvcGp4GvZG1qbtMbqSQo0tc7R/F
      YBGYuDtOXs4SSeSxO6xMjdwlnlV4OHiNpUgefWKZ4YUQwflxlsIp1FyA4bE1VO3d19ghu1oD
      CILwKKNRh8NlYerGBKW+Y0zNTuLa2kLMyZQ0Z0FvpvPUWWpdJuZDLo7WHMWdFIjb7bQ0VxFZ
      GUGSJaJbqwRiGTZCcY6dFrGWlNPc0Y4rpeOnDYXm9mb6Hq5gdyWpOHIUQ5GN+mgUnl2tAayu
      UsTICuvxPL7ySmxmAwazmRJfPZc/+xv+5vOPqPc5MJqtWM2mV14rFVgjX9LIlU8uU1fmeOHS
      ewZnDQ45wEN/mkaffTcfReMdYVdrAL3ZyfmeLu7evcH9vEp54xFctlK6W33c+OE7jM4yzp7t
      xunxYXokPbvLi96ow2B14VMsgB6Pz4OzvALD3G2uBtaxe8qxGPWUeHzbc36NDnwuM6CjtdLG
      jYATm7H4xs41Ck9RG2HpyCaDg6O09F6i1m158rkoikyNDCMXmxOsqNsmcBE25X7NhJinaQx9
      i0lK7EJEb0ZRC0DMJIllFbwlTnRPvTSaE7z/FKsTXNRGmNHqwGctdBQaxUxRC+BV3L721+Jz
      gh/NaNgLL/jkyj/t+jWfRlVVxANY4+Y2feT8pS/9vjgEkA1w/X6Iixc6MACDt65y7OxHLIwP
      0HK8ByG5yJ2pNO/1dGB4ZIRlUinNCX6MqqJGl/b+Nnt+h50jb2WRNsWXfl8cyXCqTCade/Lf
      bDqNAuRyGRQly8DANO2dLZoLrLFjikMALyEb9fPjd9/ibOum3G4uyiQyjcJS1AIw2ktoaawk
      FoqiHMgKWOOgUxwCsLgxZvyEk3nS4UVS+DAbQG80U9/RQ3l+kdFlbXVojZ1THAIQrJzrbWe0
      7y/8dG+FM72nMOrAV16FQaen/fwldLF1xCJbCU6j8BS1EfYyRFFkfnJc2yTvCSpNwa93+ZrP
      IsvygTTwxIgLMeZ86feHVgCaE7y/FKsTXBxNIA2NPaI4jLC34MYP3yIX6YbZr+Pk6v+JcR8T
      xt6U1+3SJsUdpGYa9iWWN2WfBZDih//2P0i4XJj0Ns5cuEBVyd4k80h58dA6wWo2DvLBE8Dr
      UDMKSipV6DCeYd9rAIurlvP/5QO2uyUy/pUNBH2SzZSdJo/M8Og0+pJqznS1I8VCBBNBlhY2
      qG7vpqWqhERgkXujc1QdOcWRGgfj94bYylk513MSuzYnQGOH7HsfIBVZ4dr33/P9tVuEkxmm
      hvoYW83SXF+OqOjoPHueal2cqfUgCf8CU2sZus+dZO3hA9KJDW7eX+VUTy+lVh1zD0ewVHdw
      qsXO7YFJtK2CNXbKvtcANnc1nZffw4GAwahgc1dy5EwnDr3C1OI0U/4U+dgmJV3VlBstNLXV
      4nR4cNogtrmGt+kobqcDwQkP+ycJzm1gNgi4Kts0I0xjx+y7AASdHqPJxPaM4Bw6vfHRkudp
      /BEjv7lyhdWB79h4wbnOskpCg3NkGz2ImTQlHh+u6rOcqHeyFUyi5cJp7JR9bgIZqWut4+fp
      8Hoq66sfLZzloOOoh76r1xBLmmmpdGH3leO1bU91rKytx+yq4b3jPm789QdWwjk6z38IG6P8
      +S83yRssWjKcxo45tEbYyvzsoXWCq6N96NXcK4/Zb97ECZazZvJBzz5F9GYcWgFoTvD+UqxO
      8KE1wopZ1z/HXkTPoCqo6hvUuAfskQ6UAB7/4V9Xcr/Jcde++c+iNsJKk6O0Bf5Y6DB2xOuc
      YID4WAty6uAsYnagcoHiK2PcergESCzNzJF7yZz2mf6bzIWT+xqbxuHkQAngMZuzw3z99dd8
      9dV3LIVSbC2N8+dvvqbv/hTiU27X4vw0WVEBVWFhbgZROWD1q8aB50AKoLK1kxMdx/n0t5/T
      UGpHsJTw3m8+xp3aZDnyc8lvSG4xvRlHSS0zt6miL7JOr0bhOVB9gBeiZpkbGyEiCSQ212mq
      68L16Kva9g5mb88zH8zT0nFSM8I0dsyBrAFAj6JkSCaS5DNR4vi4eLGXas8vOk8mLz5TgslQ
      liqX5cWX0tB4BQeqBrB4qmiymQAjp850MvzgHnSfpbPRzN1749R1nMHttWEwNiPYtsecGysd
      +GMVmA1a8a+xc4raCIttzPLT4Dzvf/obvNafdyITRZHN1WXUInOC5UdOsE4QsIghStIzhQ7p
      jZFkGcMbGHj5cAmKeHDK3aIWwMvQnOD9R3OCDxj5fK7okuMkSUanE1AEFb2SLXQ4O0LJyMhZ
      TQC/QEXK50hn8+j0Rmw2yzPr+L8pophHbzDtaJSn74c/F60T7E2OcSTwL4UOY0ckpxoRo67X
      H3jA2FMByNk4fTdvoRhsSJJCx+kear07t8Enhvup7/qQEm2gR2OX2VMB5JIRckYvH148i8mo
      R5BSjE/Mc6S9idXRATK+I7SX6phcSdJa62Lk7hBbGQOne85SZjcwOzbEzGqUtChS36US3Zhn
      6MEUtopWzp5oY23uAaFgDH9coffSe/jsr954T0Pjl+ypD2D1VlNnz/HtV19z58EMOYxkAwuE
      00k21oOsrvlJhAIkJZnlyWF0vlZOtLi4OzDB+sJDtoRyPvv8M5orHCDHuTe2xrHT5zCFZ5gJ
      JFhfWsDXdobfHHfzcDm2l4+icUjZ2z6AYKT9zAcc7c4zPniDkVk7FeUu1qYXsTR3YAv6md/S
      46s8hv/+TSImgbRZoKamjkjGT1NNFQa9HoNBD6kIq8EQ5plpsJRQbTGRdXkpczuwCVbQcuM0
      3oI9rQFyqRBjYxNshSJIqg6TyUBpaSlzi7N4XGWUlOpYWoxTWmqnvKoWm7OUtpYmnHYTPpuJ
      qdlZ/BsrrAUS4Cijym6kor6ZhuoKjMYDamJrFBV7WgOYrW48tgCLC4u4KztoayxHL7vo7lIo
      L3Wgd7TSaRFxGgScnecRZiZZXPHT0HaUcrePvDzJij9BZ/dpbGY7H1w+z/j0HEmbjw6Lgcbm
      dswGwFFNu7H4huA0Cs+hNcJC/s2imxUmKzKCIGCVEzize7+n126SCZvRq8W3ZeehFYDmBO8v
      mhN8wEglD/bamWYxik59dvdCVZZRBAF2Ycf1XUMVULKvH16WRBGd0fja4/YKndOJ3u3e8Xn7
      JgBZzBIORVD0Zkq9Hgz6ty+dxUwG1WTC9IqScuCnHw+0E3x87f/GmVspdBivRc4ZiQ93FDqM
      1+L829/h+Z//px2fty8CUMQUQzf7yFtKMBkNGC12vM63ry79U5OIja00lbx85w+NdxNVVVlZ
      WWF0dJQvvvjimc9nZmYYHR1Fp9PR29tLWVnZ/gggsr5A3tXE+2faHiWoKaxN3+fBzDqWkip6
      zp0kvvKQJX+ccDhOa/cF2nwGhgYGCMRz1B89TWdLOZtzY4xMrZAIpjjV0EoyuMydoTFyWOi+
      eFGbFKNBKBRidXWVSCTy3Hcej4e//du/JZVKcfXqVT799NP9mRGWy2axO10/Z2eqMrFoAkVR
      WBq7y/R6hEQkiL2qnc8+PMHqih8xlyKRzqJKGe703SDiX2Q2YuDyZ5/T09mEXoBUPEpWksmG
      57h5d57iyv7X2At8Ph8XL158rkMuCAJOp5OvvvqKu3fv0tnZidls3h8BuLxettYWyYgyYj6H
      mAyxmrbyyeefc7H7KIIsozfbKPW4MBpNGHQCW+tr+JpPc+XK5zSVGVFkGREDRr1APp9HBRZX
      Nzj34RWufHwRS5FNftHYfywWC7///e85fvw44+PjGAyG/WkCOXwNtFdEuPrnb9BZPfSeO4HP
      EOevf7mKRa+nptqIWbVj1AugM+C0W/CUWRm/fY/AqhtMDiy+RsqXb/LtN3OYdWba9XqqyjwM
      /PQDJW4rdkf9fjyKxgEnFouxtbVFOBxmdnaW+vp64vE4Ho+He/fu4XK5yGaz6HQ61tfXD68P
      8GCgH1l+ycpaB4Dmrf+BLR945jNVVdm2Lg6Of6GKBpLTja8/TlUQhMIN39ovvY/zymcEg0FW
      Vn4eXWtsbOTmzZv89re/JRKJsLa2hl6vp7W1FZPJdHgFoBlh+8tBNcJyuRySJGG3v3geyqE1
      wjQ0AMxm8yuFeWgFMHznFsoBbgI9pjH0NdZ8EHi06K8g7HsDSFX0JKd/3falqqIiFHBlMvuF
      Czg+/mjH5+26AAIzd7i1bOZ3H5/iTSryXCqBqDPjsL7ebh+9109z1wXCS9M4a5sosbzceo8E
      gwfaCX5M9dowptxaQWNQJD25seKeUGFqbn7yb0mS2NzcpLa29slnqqqSTCaf9AEaGhowmUy7
      PAyq5FhcTeEzRNhMyoBMNBhBAsRsilgyg5zPsDQ/zdzSGtlMmtGBn7jef4/F1QCZdIpUOsnq
      6hrZfJ6t9WWmpmYIxjOoQCwSQlbA5fNhN+iRckkWZ2eYmV8hJ2vDoBqQTCb585//zNdff/3c
      dwsLC+RyOUKhED/99BOwyxNisokwWZuP9qYyNlf8QI6Htx+QApLBFcbn1lmfGWYxmCGXjJPM
      5tEJOnQ6HTpBR2xtnp9u3mQjkoZ8Gn84AarIyN0h0uLPffWHo/eIZyQSkSCpnEw+NMe9ma2D
      tveCRgHQ6/V89NFHeL3eZz4XBIETJ07Q1dVFTU0NsF0r7GoTKLQ6SziqY12nshCMcqrj9HPH
      2Fxusmub5K01mK12Ksor0Jtrqa/xEZhZx1fbzpmORpRslFR4g614lkA0ycn88yW8ImZZW54n
      n42QdfpQ2ysO0ACiRiGwWl8+JyGbzfLNN9+QzWZ5//33CQaDu1gDKDmWV1O0tFRi91ZSJsTx
      JxVARpYkEtEIogJWTzXvv38euxhmZnULQQf5vPhoGUMj7hI7OgEiq0voKo7w2ScfUuOxvnBy
      y+z8Et3vf8KlnuMYtfJf4zVYLBb+7u/+jitXrnD37l1mZmZ2rwaQclnM1U10trYgACVmhWhc
      oqHFRd933+Nw2Cmts5GLbzE0MoNidHO6rRQXBqb7h+hLpWivsmM3b3eGS6qqSfcP8dO6C4u7
      FJNewFNahkEHHo8Po0GgvqaCwes/4PWVUFZas1uPolHEPDbCNjc3uX//Pu3t7YRCISorKxkY
      GMBkMpHP5zGbzVy4cOHwGmHj9++iKAd/GLQh9B0WMQQ8coIB9tvAk3UkZ39dKomiKOgKOJHH
      1tuL4/KHT1IhHuPz+ejv7+fKlSskEgmCwSB6vZ7q6mrNCT5oaE7w7iOKIrIsY7G8OFX+0Bph
      GhoARqMR4yumah5aAQzeuFaQZLjG0Le4sotvde52ZSzsaQsot1lKbsv7+gN3yHYi35sHbu7o
      wPu//i+7HsdO2RMBpEIrTG9KdB9vgkyEnx6u8eHZzr241UtJxuMFcYLzoUWU9NSvusZetkml
      9UrE9cK7voZS35N/S5LE8vIydXV1z5XWyWSSSCRCbW0tqqqysLBAMBikrKyMxsZGUqkU4+Pj
      qKpKeXk5TU1NOxLinghAlvKkMo9WPFAlEskMSj5NIJGnsrSERHQLzCWQDRONJQnFsjQdOYLb
      aiAWWGF+NYjF7aO5vpZ8bIO5ZT9WbxWt9ZUkYhFMOpXVYAqX3URpWTlGvcBWwI/XV4Fe2ymv
      qEin0/T19bG0tMQf/vCHZwSwvr7O4OAg+Xyev//7vyefzxOPx6msrGRsbAydTkcoFMJgMFBe
      Xv7SjM9XsUfddgX/4hSDg4MM3h8lms4jpcKMTG8v9rSxOMl6NMvi2G3mQxJuQ5rh6VUywSUG
      xpbxllewOvuAWFYmkUzhLa8gtjjFaizN0sx9bt4Zw2izE1+ZYiGURs36GZnwH6Q0eo03xGQy
      cenSJerq6p77zuv18vHHHz8xtywWC93d3VRUVGA2mzEYDGxtbRGJRAgGgzgcjh0PfOyRAASc
      njLq6uqoq6nCanrxqIbZUcLRo0dpqqsCVELhGE1HjtNQW4PHbkJVJWIBP6PD95mbmyMYz4Fg
      5Fj3WRqrSmnpaGV9bpn1uWWqjjRr+wQXIQaD4aUjNBaLBYPh2UbK7Ows//Zv/0Ymk6G0tJSL
      Fy/S0dGBXq/n+++/3/FqgHsmAJvbS2VlJZXlPswGPYJOQJEkpHyGrWD0hWdZjXq2wmFEMUs8
      mQUxwmrCyidXPuVYUwWoKhgs2C0GBEDvqMKlbDEeyNBQatubR9E4ULS2tvIP//APtLa2Mjo6
      it1up7q6mq6uLtLp9I4FsCd9AKPFSXnpow6o3kJNRSkGh49a8xw//HgLd0k5LqsRwVuB1QCo
      Nio8Jrw1Nbju3uaHH5cQ8woYvTR4F/jrX29QVlJGmcOMTijFZHhco+horbazGXBhNRbf2LkG
      hMNhxsfHmZ2dBeDMmTNks1m8Xi+bm5ssLCwwPz/P7du3aWpq4sGDB1itVra2tjh79iy3b98m
      k8mQzWapqanZcRPoQBlhuXiQ+2PjKKpKImfi0gfnsb1i/99UaI3+gYcce/9Dqp9aaEsURWYe
      jhbECa6K3caW33irc1Xl0YSYPWzJiWE3YmT39/KSFQX9DpxgY2Mjrt/+Dblcjlgs9qTktlgs
      DA0N8f7775PP50mn0wDodDo8Hg/JZJJcLofFYsHlciHLMpFIBEEQ8Hg8OzYRD5QAVEUmlYiT
      k1RsThcWk+GV/VoplyGVV3A6bM9svqc5wfvPbjnBsiwjyzJGo3Ff/n4HSgC7hSaA/eegpkK8
      jkPrBN/66/cFcYJteT/tm//vW52702VR8lseMquVb3Wv3eZpJ9jU3ETZP/7XAkf0ZrxaAHKe
      77/67/iO/ZbTbT4CU31sOk5zosb6i8PSbIaT1FSWIyWDDC9FOHu87Y0CSG7OMB420nOscQdh
      Rxjs3+L0hSMvnXecy2YL4gTrc0nUpP+tz99JdSzHJeTwwdsZU/Y96/LOzs7S0NDwzGQVRVGY
      mJggGo3S3d2NzbY9iheLxZifn6erqwudTsfo6CjpdJrTp0/vSQ3z6l6LqmL01pNYHiOjgCzm
      EWUVVRaZHR3k1uAwiWyemQd3+Pqbb7l5e5B4ViGTjDAy2M+9hwtIKoiZGPfv9HF/fAFRgUTY
      Tyi0xdjYFFlRJCfKqHKe2bF7XL/Rx0owCeRYX1pl7P4dBh5Mk5dVVDnH1PAgN24NEUxmQRWZ
      eTDIjZt32Erkdv3H0fh1ZDIZfvzxR/r7+0mlUs98Nz09TSgUory8nJs3byLLMoqiMDAwwOjo
      KJIkMTIyQiaTwePx0NfXh7IHy1++ttuuM1g50VrCg4mfRzb80yOknXW0VVq5c2+S6vomahua
      ONl5DLsJIoEA3oYjGONzLIdSTIxOUNZ8DEfez8OFDYJLo1wbmMBTWYXxUW0vizlMnkpOdLay
      MHKPpJxh+PZ9bJUtWJObLEcSTN3vI22toqujFYteR3rtIUuih66ORqR8ftd/HI1fh9ls5vLl
      yzQ2Nj73nd/vp7Ozk9bWVnQ6Hel0momJCaqqqigpKQEgEAjQ2dnJ0aNHyWaziKL43HV+LW80
      buWuaUfyT5KSASQWpmaZHB3izvA0sqDDZLFisVhwOranM5bVtVBbXorP60JKxRifmWH4Th+T
      y35UVQCDla7us9T4XDxO3ZGyCaZH7nGjb5CF9VVyefBUNlJX5cPnLgEUUjkdR1pqKPG4MekF
      rL5GTPEFhkcmSOUVbVLkAUOn070yFfnxSI/ZbCYajbK1tcXRo0ef9CV0Ot2TwQyz2bwnNcAb
      dYJ1ejNdR8r56427NLzXQ3mlG0rP0tPkZCuSQidI221uReG5MSWTlUq3l5b3P6LCmCchGUiu
      GTD9wrgKBTYpaz3LkQo9P/zlxxfGoYgpgtEsgj5EQpTI5RWOn30PG0H6BudprOo+vL36Q4bB
      YCCVSmG320mlUiSTSfx+P//+7//O9PQ0brcbRVHIZrMYjUYymcyejI69+n3R6amtqgRBwFXV
      RnNjgFKnkerTl4gP3eG7OZn2k+eoKPVypNzEX6/1ce7MKarKtvPN7Z4K9FYHte+fYWjwGhMG
      N6fPncHprQTL9sMYHaXUCHoqvD5Wbg/Qv1VK85F2LAYzVbU+dIC91IfRaqb+bA+3b//EsttH
      Y30NJpOehwP9BDM6Tp+/8EYLcWnsH5FIhDt37jA5OUkgEODChQsAOJ1O2trauHr1Kjqdjubm
      Ztrb2+no2N6K6T//8z/p6ekhFArx3XffAXD8+PFX1iZvy6H1ARZnph6tNLG/mKQ4lbH+tzpX
      URQEQXhj/0JK2hDDO98Ybi+QZflJCW0oK8P5+RVkWd7ey+HRK6aqKoODg5w/fx6z2YwoiiiK
      sr1C21Mu8mMfB3hyvtls3hNf59AKQDPC9pc3McJUVX0yef6g/G20JrPGviEIwoET96EVwE/f
      fYUsFW5xXHtunePr/0/B7v9LIoNde3yH7fnMAOX/2z9i6drr++0OeywAkVt/+heSrb18drIF
      /9wIa3kfpzuq9/a2gCIrezJs9ub3l0A+GN6EqgJ7MIb+0vspP7eqNzY2SCaTtLU9mxkQDoef
      pDi3t7cTi8W4c+cO+Xye3t5efD4fIyMjLCwsUFtby+nTp/ek9tjzlYzspbVYEitsJCVARUUF
      RWR25Dbf/XCNjVgGpDRLa1ssTwwxObfI7GoQUJkducdWMoeSDjG/ESG5tczV77/lx9uj5CSF
      5cU5cqICqCwtzCEph647U9SMj49z48YNFhcXn/k8n89z/fp1zp8/z8rKCisrK6TTaXp6erh8
      +TLXr18nHo/jdrv54osvyOVyTExM7EmMey4AQTDS2lbPzNTsk8/WZx/gV8q4fKGLsf4bxDIp
      hvquEVDLaW3wsj4xTSYXYnZqnrmNMKHVFdKyioSJng8+4ZgzzuhqDKIbTAcSqKkVptdEtPnw
      B4uOjg4uX76MyfRsvlIkEqG8vByPx8OxY8fw+/1UV1fjdrvZ2trC6XRit9tpampCkiRisdhz
      qz3vFvvSB7CX1+OZ62M1ZgMrRGMxapq7sDhM1PiMxFMi3tpjnD5Wjw5wu3IsT29S33Oa2EqA
      FUuSuko76xP3mPFnUJJ+zO31nO3s4NqdeRYcOZo7TjwzJ0Cj8LxspOfxSm2CIGAymVBVFUmS
      uHbtGqFQiNbWVvR6PQsLCwwMDGC1WnE4HHsS4/4s5igYaDnSyMLMHAAlbjeryytkEiHWghJu
      uxGdXv8kmIqSEsZXVvG5a3BYAgRCRlwOCMd0/OazzzjWULZ9rKkUryHORChDtQlSQOMAAA7c
      SURBVFvbJb5YsNvthMNhFEUhHA5js9nQ6XR8/PHH/OEPfyAQCBCLxWhsbOQPf/gDZ86cYXh4
      eMfzfd+EPa4BdFQ01mEBzL46znSEEMpcVHvLyYzd48adNU5ceB+XVaWx9ufSoqyugcacBbfT
      jKmmCaOvBLPOzLFjNdy5foO6hqMc9WwbQC01TvwhHxZD4RZm1XgeRVEYHBxkcnKSYDBILpej
      t7eXlZUVjh07hsVi4Z//+Z8xGo188cUXDA0NsbCwAGw7xaIo8sc//hHYXtf/o48+0oywXxLb
      mOXH2zNc+vwTSq0/2+SiKLK2tFAQJ/gxRjlBWWJ4R+fs1AneCdn18l2/5tM87QTbL17AUP78
      /SYnJzGZTDQ/tZ9XoSlqAbwMzQnef7QpkQcMWZL2f539Rwgo6JS3MOEkCXQCqrwLAlCF7dTz
      fUAwGotStHAABKCqKpKYR1ZUDEYTAiqCoEP3eExTVRAlBYPx1StE/JLrf/6mYNuk2nNrdK39
      XwW592Mya2VkV6v25V6+f/yvmE6d3Jd77TYFFoDK1uIIt8dWsVqMlDedwJpfw1neQZXv0Upv
      coblpSgNrTWFDlbjNUSjUW7fvo3RaOTixYuYTCbGxsaYn5/n1KlTNDY2srS0xPDwMAaDgYsX
      L+LxeAraVC3oO6WKCUamQly+8je4TNujONMPl1mdecCDwTht3RdoLoW8oiIgMv9wiq1IgKjs
      4P0LZ9Cl/dwZeEBW56L3vR481t3PF9d4MyRJoq+vj97eXkKhEH19fdTX15NMJvn888/59ttv
      cblcGAwGPv/8c+LxOH19ffz2t78taPOpoGOHcjKK6Cp78vIDkM+gOqr5+PJJFicWkKUUyytb
      qEgsTC9Q13WB426ZxVASWTXSeeYCZ1tMDD1c16ZEFhBJkjAYDJSUlNDQ0EA6nSaRSFBZWYnF
      YqG+vp5QKER1dTW5XI75+XmqqqoKuq8YFLgG0FsskFonr6qYHleDZgd15WUYrXlsOt0zL7XT
      W0mp20rKZiUmqPiXp5jbymNUosQwP5WPqLHfmM1mysrK+OMf/4jZbCYej3PhwgWuX7/O/fv3
      SSaT9Pb2kslkuHv3LslkktbW1kKHXVgBCNZS6uzD3B1b4Gi1nayyMzc3FEvR0XUOcXOY0Nsv
      xaOxCzzeif3UqVMEg0EePnyI1+vlyy+/RBAEbt68idfrxWAwcPnyZURR5LvvvqOlpaWgw6cF
      7lfqOd57mbmJMcantmjp6KS8qh6T1QToaW6rRm+0cqzdiA4jjW0NGABbRS3VRiuWrhM8mJig
      tLqZcz6XVvoXmPHxcaamptDpdFy+fJlUKsW1a9fIZDI0NzdTWlrKzZs3CQQCqKpKa2vrnszz
      3QmH1ggLrK/tSe7Im2BUUnhSkzs+T5HlbSd4F9rFctqCnNyfPRMsJ7rA43luM4ti4NAKQHOC
      9xdRFAtemr8NxSfZNySbSe/r/YxyCp3y62ZdqbKMKggov6gBFNEI++TqvhCdHkPpq/Pxi62w
      eUzBBZDPplENZsyG3S31+q/+ZV+d4Db/f6c0tTezlmLDR1Fyheso6svLqPmn/71g999LCi6A
      2Xt9iHVnOVnnKXQoGq9BlmVGR0eZm5ujpaWFEydOoCgKs7OzRKNRzp8/Tzab5c6dO2xtbVFZ
      WUlPT89zM8IOEgUXwGPi/gUG7k8gGd2c6z2LIb7J1PISwXCKxmNnaG/wsfxwiPHFLVxVzfSc
      amd56i7hcJJAXKbng0uUOw7uD30Y2NjYIBKJ8Lvf/Y6rV69SWlqKKIqsrKyQf2px4mPHjuH1
      eunv72dxcZEjR44UMOpXc2BmkehNdo52naK5ROThYoBMLILe28Rnn3xAYPYB8ZyMzVPNqTOn
      EQOLbCWyBNbXqGw/x8cnvEysxAr9CIeeXC6Hy+XCaDRSX1+P3++nubmZs2fPPukAWywWLBYL
      s7OzJBIJyl8wL+AgUfAaQNXpMOkFlmfG2ZKsGDNx4vY0uA243HYMJhtupxExFeHh+BQ2t4tk
      JEFSljA7Syh12bFigUShn+TwU11dzfT0NH/605+QJImWlpYXHheLxdjc3EQQhILs0rMTClYD
      JMMBlhdnWIvIlJVYSKVEKqqrsZl0bE/kkgkFNlmceUgoZ8Opz5E1OKmu8iEUcKbXu4zZbOY3
      v/kNv//976mtraWq6vl063w+j9fr5YMPPqCmpobl5eUCRPrmFKwGUKQsoWiGE+ffx2ezYOs+
      weziJp6mbirtbtTNWVKxCFFK6e05jcWi43RLls1olu7LH+J2WBHbjmE2AM4ajpmKbzZSsZHP
      57l27RqJRIKGhgaqq6u5e/cuU1NThMNhZFnmxIkTDA0Nkc/nsVgsXLp0qdBhv5IDa4SFFmZJ
      ucqoL9356seiKBIJbvH8ZgV7hyO3ilH+de2wbSdYh/CLBY6kmBNVLlx3TTCbsZ488cpjHmeD
      FhsHVgC/Bs0J3n80J/iAkYhF9/T6ZjGCQcn86uuokg75kcklSzI6nYBU4Bz5pxEMBkz19a8/
      rsgKm8fsiwBkMYd/c52cBAaznaryEuLJHCUlzud64dlUAow2LKYdlIJihrhkwPXUjLChm9f3
      1AluDfwJX3LkV19HjDhJTjftQkR7g97no+b/+KdCh7Fn7IsAstF17gyP09bUgFHWoygq+fyL
      82aWp0YQqjppq9pB2z+2yP0tHx92lO1SxBq/RJIk7t69y8rKCrW1tZw7d45UKsXNmzeRJIme
      nh7Ky8sZGRlhdnaWxsZGuru7D3xzbt+aQN6qBjo7O7f/kwmz5A9T6TFwe3AcMRsjqdi58N75
      J8fn4gHuDNwlkRNo7e7liDPL9dElpGQY2VbFh+dPkgnMMTAyg5IOo2/7dL8e5Z1kY2ODXC7H
      l19+yfXr11leXmZ1dZVjx45htVoZHh6mu7ubYDDI7373O27dukUgEHjhUOlBYt8am8sPB/jq
      q6+4dmuUnJxjK5IAJU80rdB98SOOVlkIhX/eTFkwmKlraqOtycP0yBySlCYh23nvoyt4DEky
      2SSjYyuc+/BTPn3vFEZtacQ9RZZlTCYTer2eyspKNjc3yWazVFdXU1paiiAIhMNhqqqqMJvN
      1NTUEI3ubT9sN9i3GqD+eA8fnn1UAyR/3nTb6vTgsBiJmM1IqDz2Df1LM6zHdXhdOuRUGhkP
      To8Xi0GP0WwCNQ0GH06LEX1Kr80G22OqqqqYn5/nX//1X1FVldraWuDlnd9i6RQf2GIzl8sh
      GI1IuSw5+UXOrwuTssaDh+OMTswiSpo7vJcYDAZ6e3v58ssvKS8vp6GhAYvF8iRBTlEUPB4P
      m5ub5PN51tfXcbsPxg6Wr2JfagCLu5KTR596Qa2lXDjhAKOFkx1WAMprmlB0FlRXJ5jsmL2n
      MKxtYLRX8EmtGZPDxMmmbb22tnZgsVk4/d57rKz5sbX1UOvU0qn3EkmS6O/vJxqN0tbWRlVV
      FTabjRs3biDLMj09PZSVlVFSUsJ//Md/UF9fT0VFRaHDfi2H1ghLxvc2O9SaD2KQU68/8DWo
      kh45s70ahixL6ATdrswJ3i0EoxFz64uT3p5Gc4IPEKIooqpq0bRDH7OXy6PvNU8vj15MFJ9k
      3xCj0Vh0L5IkSeh0uoKvlva2FGMqRHH+0hoau8ShbAI9fqRiqwGKNW7Ybr4VY811KAWgofGm
      FJ9kNTR2kUPbCQZAlVmenSQm22k/0oDxgOykLedSzMzOkskrmB1e2loaULNRZueWsJfVU1fh
      QYfMxtIcwbSO1rYmrMbCjrCoqszWxioWTy0uqx5VEVlfnCMqmmlpacBi0JGJBZhd8uOrbaLK
      60CV8yzPz5ISHLQ21WHS7//vr6oqUf8SirOWUrsBRU4xNTJNFjA4fIe7Blgdu81CXIc5t8qt
      4cX9nCD2SlJbK6zHJcrKyvCWuNCpWYZuDaBanCyNDrAaTrE1P8bEegqrGqF/aBKpgLErUp6J
      e7e4eeM6y5E8oOKfvc+0P48h6+f2gzmkTITbdx5gcViZHLpNICmxPD7ASgzU6BKDEyv7vn+D
      qqosjPVz66erTGxmARAjS8xFBMrKyih9QTr+oWI2kKL35FGOnLhAPjSLekC20IjHo6SicbbC
      ccw2G2p8g4y7gY7WZk531LDsj7ASCHG88zitx05jzW+QzhUu1UPQ6Wk8dpbTR6sffSKytpyi
      62wXRzo70YcD+MMB7FWttDW3crSpFL9/nc1Nmc5THRw71YW0uUGuALFXNp/kvVM/b8ua8K+T
      FrNshWLYHPbDLQC90YBeEEDQYzAZOCDvP+VNxzl3qh2vHW7f6COSymGx29AJYLVakCQZQQCT
      0QCCHpPFiFzAlTAEnR6b1fpUwqGCJFiwGgUEvRG7DrKqgtW4ndZiNtlQ1SyKzobZICAYzFgF
      hf1eIEUQBGx2+zOfuZt6uHSinlKHwLUfbhxuAaiiRF5RQc0jZpUDs32MwWynoqqKhpYOfLYs
      eUxkonFkFRLxFBaTEQGBTC4Pqkg2LWLY5bVTfx16zLo0iayCKuaIqwJOvYFkNglAOhNHp3di
      EBKk8ypKLk1SMFJ4m0xFb3FQVVVNffMRyskf7k7w8eZyfvzxOk4hiaepB+GAKGBjdpjpzTQm
      8iQUH12VdZQuXuP6zQiZRJqzl9qxuGvou32TWZOMvvQIdmPhYpfySSZGHrK8sETWb8asdNDQ
      Wkn/tR+xGyWs1cfxlZYw+/Am1/s2SKcULnxYQVbeYPCna5jVLJ6WM/suAFUVmbx/j83lRVb1
      OjxCC67MBnPhPCayhB2lh9wHUBUS0Qg51YDX40J3QAwmVZGIx2LkZQGX243ZqEcWc0RjcYxW
      J06bBQGVVCJKRhQo8bgxFHAES5FFopEIjzPOzXYXLpuJVDxKTtHjdrsw6ASkXJpoIo3V4cZu
      MaIqMol4FBETJS4H+n1+BlVViIWC5B/FbbQ4KHGYiEWjiIoOV0nJIReAhsZrONR9AA2N16EJ
      QOOdRhOAxjuNJgCNdxpNABrvNJoANN5pNAFovNNoAtB4p9EEoPFOowlA451GE4DGO40mAI13
      Gk0AGu80mgA03mk0AWi802gC0Hin+f8B5sWy9YEjxxMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
